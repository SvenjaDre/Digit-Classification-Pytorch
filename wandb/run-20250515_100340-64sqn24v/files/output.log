Epoch 1 | Train Loss: 1.0180 | Val Loss: 0.6967
Epoch 2 | Train Loss: 0.5607 | Val Loss: 0.5034
Epoch 3 | Train Loss: 0.4840 | Val Loss: 0.4610
Epoch 4 | Train Loss: 0.4570 | Val Loss: 0.4649
Epoch 5 | Train Loss: 0.4138 | Val Loss: 0.4755
Epoch 6 | Train Loss: 0.3817 | Val Loss: 0.3926
Epoch 7 | Train Loss: 0.3677 | Val Loss: 0.4458
Epoch 8 | Train Loss: 0.3429 | Val Loss: 0.3484
Epoch 9 | Train Loss: 0.3209 | Val Loss: 0.4203
Epoch 10 | Train Loss: 0.3118 | Val Loss: 0.3629
Epoch 11 | Train Loss: 0.2918 | Val Loss: 0.4581
Epoch 12 | Train Loss: 0.2959 | Val Loss: 0.3447
Epoch 13 | Train Loss: 0.2707 | Val Loss: 0.3574
Epoch 14 | Train Loss: 0.2589 | Val Loss: 0.3642
Epoch 15 | Train Loss: 0.2579 | Val Loss: 0.3293
Epoch 16 | Train Loss: 0.2565 | Val Loss: 0.3854
Epoch 17 | Train Loss: 0.2380 | Val Loss: 0.3787
Epoch 18 | Train Loss: 0.2583 | Val Loss: 0.3396
Epoch 19 | Train Loss: 0.2558 | Val Loss: 0.4064
Epoch 20 | Train Loss: 0.2543 | Val Loss: 0.3629
Epoch 21 | Train Loss: 0.2334 | Val Loss: 0.3683
Epoch 22 | Train Loss: 0.2116 | Val Loss: 0.3578
Epoch 23 | Train Loss: 0.1951 | Val Loss: 0.3860
Epoch 24 | Train Loss: 0.2145 | Val Loss: 0.3496
Epoch 25 | Train Loss: 0.2056 | Val Loss: 0.4744
Epoch 26 | Train Loss: 0.2128 | Val Loss: 0.4141
Epoch 27 | Train Loss: 0.2510 | Val Loss: 0.4747
Epoch 28 | Train Loss: 0.2226 | Val Loss: 0.3677
Epoch 29 | Train Loss: 0.2461 | Val Loss: 0.4394
Epoch 30 | Train Loss: 0.2189 | Val Loss: 0.3647
Epoch 31 | Train Loss: 0.2028 | Val Loss: 0.3828
Epoch 32 | Train Loss: 0.1885 | Val Loss: 0.3719
Epoch 33 | Train Loss: 0.1731 | Val Loss: 0.4216
Epoch 34 | Train Loss: 0.2600 | Val Loss: 0.4391
Epoch 35 | Train Loss: 0.2190 | Val Loss: 0.5111
Epoch 36 | Train Loss: 0.2068 | Val Loss: 0.4602
Epoch 37 | Train Loss: 0.2257 | Val Loss: 0.3674
Epoch 38 | Train Loss: 0.1972 | Val Loss: 0.4301
Epoch 39 | Train Loss: 0.1856 | Val Loss: 0.4084
Epoch 40 | Train Loss: 0.2063 | Val Loss: 0.4332
Epoch 41 | Train Loss: 0.1859 | Val Loss: 0.3816
Epoch 42 | Train Loss: 0.1419 | Val Loss: 0.4062
Epoch 43 | Train Loss: 0.1522 | Val Loss: 0.3853
Epoch 44 | Train Loss: 0.1822 | Val Loss: 0.3653
Epoch 45 | Train Loss: 0.1931 | Val Loss: 0.3623
Epoch 46 | Train Loss: 0.1596 | Val Loss: 0.3172
Epoch 47 | Train Loss: 0.1291 | Val Loss: 0.4490
Epoch 48 | Train Loss: 0.1309 | Val Loss: 0.3898
Epoch 49 | Train Loss: 0.1503 | Val Loss: 0.4311
Epoch 50 | Train Loss: 0.1649 | Val Loss: 0.3860

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:143: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  907
‚ùå Incorrect predictions:  104
 Total tested images: 1011
 Accuracy: 89.7131552917903%
