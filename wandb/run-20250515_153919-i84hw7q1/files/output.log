Epoch 1 | Train Loss: 1.3888 | Val Loss: 1.0943
Epoch 2 | Train Loss: 1.0957 | Val Loss: 1.0942
Epoch 3 | Train Loss: 1.0962 | Val Loss: 1.0947
Epoch 4 | Train Loss: 1.0961 | Val Loss: 1.0946
Epoch 5 | Train Loss: 1.0960 | Val Loss: 1.0952
Epoch 6 | Train Loss: 1.0959 | Val Loss: 1.0944
Epoch 7 | Train Loss: 1.0966 | Val Loss: 1.0947
Epoch 8 | Train Loss: 1.0957 | Val Loss: 1.0942
Epoch 9 | Train Loss: 1.0958 | Val Loss: 1.0944
Epoch 10 | Train Loss: 1.0955 | Val Loss: 1.0943
Epoch 11 | Train Loss: 1.0954 | Val Loss: 1.0946
Epoch 12 | Train Loss: 1.0959 | Val Loss: 1.0956
Epoch 13 | Train Loss: 1.0955 | Val Loss: 1.0940
Epoch 14 | Train Loss: 1.0960 | Val Loss: 1.0950
Epoch 15 | Train Loss: 1.0956 | Val Loss: 1.0943
Epoch 16 | Train Loss: 1.0957 | Val Loss: 1.0942
Epoch 17 | Train Loss: 1.0958 | Val Loss: 1.0943
Epoch 18 | Train Loss: 1.0960 | Val Loss: 1.0942
Epoch 19 | Train Loss: 1.0954 | Val Loss: 1.0945
Epoch 20 | Train Loss: 1.0957 | Val Loss: 1.0940
Epoch 21 | Train Loss: 1.0957 | Val Loss: 1.0947
Epoch 22 | Train Loss: 1.0953 | Val Loss: 1.0945
Epoch 23 | Train Loss: 1.0958 | Val Loss: 1.0948
Epoch 24 | Train Loss: 1.0955 | Val Loss: 1.0940
Epoch 25 | Train Loss: 1.0957 | Val Loss: 1.0944
Epoch 26 | Train Loss: 1.0959 | Val Loss: 1.0951
Epoch 27 | Train Loss: 1.0954 | Val Loss: 1.0943
Epoch 28 | Train Loss: 1.0956 | Val Loss: 1.0940
Epoch 29 | Train Loss: 1.0956 | Val Loss: 1.0943
Epoch 30 | Train Loss: 1.0961 | Val Loss: 1.0944
Epoch 31 | Train Loss: 1.0964 | Val Loss: 1.0951
Epoch 32 | Train Loss: 1.0958 | Val Loss: 1.0945
Epoch 33 | Train Loss: 1.0954 | Val Loss: 1.0952
Epoch 34 | Train Loss: 1.0958 | Val Loss: 1.0950
Epoch 35 | Train Loss: 1.0955 | Val Loss: 1.0941
Epoch 36 | Train Loss: 1.0956 | Val Loss: 1.0941
Epoch 37 | Train Loss: 1.0953 | Val Loss: 1.0948
Epoch 38 | Train Loss: 1.0956 | Val Loss: 1.0942
Epoch 39 | Train Loss: 1.0957 | Val Loss: 1.0940
Epoch 40 | Train Loss: 1.0962 | Val Loss: 1.0943
Epoch 41 | Train Loss: 1.0963 | Val Loss: 1.0950
Epoch 42 | Train Loss: 1.0967 | Val Loss: 1.0952
Epoch 43 | Train Loss: 1.0956 | Val Loss: 1.0943
Epoch 44 | Train Loss: 1.0954 | Val Loss: 1.0955
Epoch 45 | Train Loss: 1.0957 | Val Loss: 1.0945
Epoch 46 | Train Loss: 1.0963 | Val Loss: 1.0949
Epoch 47 | Train Loss: 1.0956 | Val Loss: 1.0942
Epoch 48 | Train Loss: 1.0957 | Val Loss: 1.0950
Epoch 49 | Train Loss: 1.0959 | Val Loss: 1.0945
Epoch 50 | Train Loss: 1.0955 | Val Loss: 1.0945

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  405
‚ùå Incorrect predictions:  606
 Total tested images: 1011
 Accuracy: 40.0593471810089%
