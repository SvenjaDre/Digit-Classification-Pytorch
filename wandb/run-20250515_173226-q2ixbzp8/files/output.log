Epoch 1 | Train Loss: 0.7065 | Val Loss: 0.5781
Epoch 2 | Train Loss: 0.5070 | Val Loss: 0.4367
Epoch 3 | Train Loss: 0.4434 | Val Loss: 0.3786
Epoch 4 | Train Loss: 0.3461 | Val Loss: 0.3630
Epoch 5 | Train Loss: 0.3113 | Val Loss: 0.3752
Epoch 6 | Train Loss: 0.2712 | Val Loss: 0.3281
Epoch 7 | Train Loss: 0.2369 | Val Loss: 0.2634
Epoch 8 | Train Loss: 0.1905 | Val Loss: 0.2672
Epoch 9 | Train Loss: 0.1764 | Val Loss: 0.2466
Epoch 10 | Train Loss: 0.1628 | Val Loss: 0.2698
Epoch 11 | Train Loss: 0.1453 | Val Loss: 0.2117
Epoch 12 | Train Loss: 0.1089 | Val Loss: 0.3081
Epoch 13 | Train Loss: 0.1140 | Val Loss: 0.2348
Epoch 14 | Train Loss: 0.0920 | Val Loss: 0.2297
Epoch 15 | Train Loss: 0.0869 | Val Loss: 0.1979
Epoch 16 | Train Loss: 0.0764 | Val Loss: 0.2087
Epoch 17 | Train Loss: 0.0543 | Val Loss: 0.2515
Epoch 18 | Train Loss: 0.0603 | Val Loss: 0.2235
Epoch 19 | Train Loss: 0.0531 | Val Loss: 0.3106
Epoch 20 | Train Loss: 0.0555 | Val Loss: 0.2618
Epoch 21 | Train Loss: 0.0538 | Val Loss: 0.2580
Epoch 22 | Train Loss: 0.0547 | Val Loss: 0.2620
Epoch 23 | Train Loss: 0.0383 | Val Loss: 0.2911
Epoch 24 | Train Loss: 0.0534 | Val Loss: 0.2834
Epoch 25 | Train Loss: 0.0375 | Val Loss: 0.2626
Epoch 26 | Train Loss: 0.0262 | Val Loss: 0.3013
Epoch 27 | Train Loss: 0.0293 | Val Loss: 0.2473
Epoch 28 | Train Loss: 0.0213 | Val Loss: 0.3103
Epoch 29 | Train Loss: 0.0342 | Val Loss: 0.2663
Epoch 30 | Train Loss: 0.0224 | Val Loss: 0.2529
Epoch 31 | Train Loss: 0.0323 | Val Loss: 0.2650
Epoch 32 | Train Loss: 0.0346 | Val Loss: 0.2719
Epoch 33 | Train Loss: 0.0459 | Val Loss: 0.2538
Epoch 34 | Train Loss: 0.0251 | Val Loss: 0.2763
Epoch 35 | Train Loss: 0.0203 | Val Loss: 0.3012
Epoch 36 | Train Loss: 0.0116 | Val Loss: 0.3442
Epoch 37 | Train Loss: 0.0111 | Val Loss: 0.3247
Epoch 38 | Train Loss: 0.0224 | Val Loss: 0.2739
Epoch 39 | Train Loss: 0.0190 | Val Loss: 0.3342
Epoch 40 | Train Loss: 0.0299 | Val Loss: 0.2848
Epoch 41 | Train Loss: 0.0230 | Val Loss: 0.2892
Epoch 42 | Train Loss: 0.0146 | Val Loss: 0.3260
Epoch 43 | Train Loss: 0.0254 | Val Loss: 0.3371
Epoch 44 | Train Loss: 0.0125 | Val Loss: 0.2877
Epoch 45 | Train Loss: 0.0108 | Val Loss: 0.3248
Epoch 46 | Train Loss: 0.0446 | Val Loss: 0.2796
Epoch 47 | Train Loss: 0.0217 | Val Loss: 0.3471
Epoch 48 | Train Loss: 0.0182 | Val Loss: 0.2793
Epoch 49 | Train Loss: 0.0133 | Val Loss: 0.3831
Epoch 50 | Train Loss: 0.0120 | Val Loss: 0.3215

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  973
‚ùå Incorrect predictions:  38
 Total tested images: 1011
 Accuracy: 96.24134520276954%
