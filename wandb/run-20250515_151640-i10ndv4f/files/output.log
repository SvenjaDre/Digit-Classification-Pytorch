Epoch 1 | Train Loss: 0.6869 | Val Loss: 0.4666
Epoch 2 | Train Loss: 0.4676 | Val Loss: 0.3957
Epoch 3 | Train Loss: 0.3639 | Val Loss: 0.4183
Epoch 4 | Train Loss: 0.2903 | Val Loss: 0.3282
Epoch 5 | Train Loss: 0.2247 | Val Loss: 0.3364
Epoch 6 | Train Loss: 0.2018 | Val Loss: 0.2855
Epoch 7 | Train Loss: 0.1658 | Val Loss: 0.3270
Epoch 8 | Train Loss: 0.1414 | Val Loss: 0.2942
Epoch 9 | Train Loss: 0.1173 | Val Loss: 0.2994
Epoch 10 | Train Loss: 0.1073 | Val Loss: 0.2720
Epoch 11 | Train Loss: 0.0934 | Val Loss: 0.3948
Epoch 12 | Train Loss: 0.0773 | Val Loss: 0.3164
Epoch 13 | Train Loss: 0.0638 | Val Loss: 0.3452
Epoch 14 | Train Loss: 0.0623 | Val Loss: 0.3443
Epoch 15 | Train Loss: 0.0530 | Val Loss: 0.3160
Epoch 16 | Train Loss: 0.0572 | Val Loss: 0.3863
Epoch 17 | Train Loss: 0.0436 | Val Loss: 0.3419
Epoch 18 | Train Loss: 0.0366 | Val Loss: 0.3110
Epoch 19 | Train Loss: 0.0368 | Val Loss: 0.4621
Epoch 20 | Train Loss: 0.0451 | Val Loss: 0.3379
Epoch 21 | Train Loss: 0.0185 | Val Loss: 0.4082
Epoch 22 | Train Loss: 0.0260 | Val Loss: 0.4658
Epoch 23 | Train Loss: 0.0298 | Val Loss: 0.4144
Epoch 24 | Train Loss: 0.0191 | Val Loss: 0.3880
Epoch 25 | Train Loss: 0.0240 | Val Loss: 0.5704
Epoch 26 | Train Loss: 0.0419 | Val Loss: 0.3757
Epoch 27 | Train Loss: 0.0403 | Val Loss: 0.3907
Epoch 28 | Train Loss: 0.0237 | Val Loss: 0.4533
Epoch 29 | Train Loss: 0.0354 | Val Loss: 0.4738
Epoch 30 | Train Loss: 0.0167 | Val Loss: 0.4497
Epoch 31 | Train Loss: 0.0073 | Val Loss: 0.5131
Epoch 32 | Train Loss: 0.0191 | Val Loss: 0.4328
Epoch 33 | Train Loss: 0.0126 | Val Loss: 0.5241
Epoch 34 | Train Loss: 0.0108 | Val Loss: 0.5112
Epoch 35 | Train Loss: 0.0396 | Val Loss: 0.4052
Epoch 36 | Train Loss: 0.0228 | Val Loss: 0.5068
Epoch 37 | Train Loss: 0.0438 | Val Loss: 0.3732
Epoch 38 | Train Loss: 0.0134 | Val Loss: 0.5076
Epoch 39 | Train Loss: 0.0058 | Val Loss: 0.4955
Epoch 40 | Train Loss: 0.0034 | Val Loss: 0.4911
Epoch 41 | Train Loss: 0.0160 | Val Loss: 0.4712
Epoch 42 | Train Loss: 0.0124 | Val Loss: 0.5100
Epoch 43 | Train Loss: 0.0219 | Val Loss: 0.4707
Epoch 44 | Train Loss: 0.0088 | Val Loss: 0.5162
Epoch 45 | Train Loss: 0.0187 | Val Loss: 0.5324
Epoch 46 | Train Loss: 0.0079 | Val Loss: 0.5606
Epoch 47 | Train Loss: 0.0046 | Val Loss: 0.5605
Epoch 48 | Train Loss: 0.0457 | Val Loss: 0.4259
Epoch 49 | Train Loss: 0.0477 | Val Loss: 0.4989
Epoch 50 | Train Loss: 0.0146 | Val Loss: 0.4406

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  948
‚ùå Incorrect predictions:  63
 Total tested images: 1011
 Accuracy: 93.76854599406528%
