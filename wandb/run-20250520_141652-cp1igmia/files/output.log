Epoch 1 | Train Loss: 0.9759 | Val Loss: 0.7803
Epoch 2 | Train Loss: 0.7064 | Val Loss: 0.6116
Epoch 3 | Train Loss: 0.5868 | Val Loss: 0.5385
Epoch 4 | Train Loss: 0.5400 | Val Loss: 0.5150
Epoch 5 | Train Loss: 0.5072 | Val Loss: 0.5005
Epoch 6 | Train Loss: 0.4955 | Val Loss: 0.4734
Epoch 7 | Train Loss: 0.4834 | Val Loss: 0.4710
Epoch 8 | Train Loss: 0.4673 | Val Loss: 0.5106
Epoch 9 | Train Loss: 0.4569 | Val Loss: 0.4709
Epoch 10 | Train Loss: 0.4389 | Val Loss: 0.4434
Epoch 11 | Train Loss: 0.4112 | Val Loss: 0.4323
Epoch 12 | Train Loss: 0.4130 | Val Loss: 0.4231
Epoch 13 | Train Loss: 0.4102 | Val Loss: 0.4249
Epoch 14 | Train Loss: 0.3961 | Val Loss: 0.4061
Epoch 15 | Train Loss: 0.3784 | Val Loss: 0.4015
Epoch 16 | Train Loss: 0.3680 | Val Loss: 0.3918
Epoch 17 | Train Loss: 0.3714 | Val Loss: 0.3925
Epoch 18 | Train Loss: 0.3550 | Val Loss: 0.3968
Epoch 19 | Train Loss: 0.3544 | Val Loss: 0.3999
Epoch 20 | Train Loss: 0.3530 | Val Loss: 0.4073
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/icy-sweep-1/checkpoint_epoch_020.pt
Epoch 21 | Train Loss: 0.3401 | Val Loss: 0.4343
Epoch 22 | Train Loss: 0.3254 | Val Loss: 0.3705
Epoch 23 | Train Loss: 0.3126 | Val Loss: 0.3620
Epoch 24 | Train Loss: 0.3160 | Val Loss: 0.3609
Epoch 25 | Train Loss: 0.3202 | Val Loss: 0.3590
Epoch 26 | Train Loss: 0.3042 | Val Loss: 0.3584
Epoch 27 | Train Loss: 0.2951 | Val Loss: 0.3662
Epoch 28 | Train Loss: 0.2879 | Val Loss: 0.3491
Epoch 29 | Train Loss: 0.2827 | Val Loss: 0.3607
Epoch 30 | Train Loss: 0.2852 | Val Loss: 0.3388
Epoch 31 | Train Loss: 0.2723 | Val Loss: 0.3618
Epoch 32 | Train Loss: 0.2895 | Val Loss: 0.3385
Epoch 33 | Train Loss: 0.2737 | Val Loss: 0.3322
Epoch 34 | Train Loss: 0.2650 | Val Loss: 0.3316
Epoch 35 | Train Loss: 0.2651 | Val Loss: 0.3270
Epoch 36 | Train Loss: 0.2438 | Val Loss: 0.3164
Epoch 37 | Train Loss: 0.2385 | Val Loss: 0.3260
Epoch 38 | Train Loss: 0.2462 | Val Loss: 0.3241
Epoch 39 | Train Loss: 0.2549 | Val Loss: 0.3020
Epoch 40 | Train Loss: 0.2412 | Val Loss: 0.3135
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/icy-sweep-1/checkpoint_epoch_040.pt
Epoch 41 | Train Loss: 0.2285 | Val Loss: 0.3038
Epoch 42 | Train Loss: 0.2384 | Val Loss: 0.3115
Epoch 43 | Train Loss: 0.2219 | Val Loss: 0.3013
Epoch 44 | Train Loss: 0.2252 | Val Loss: 0.2955
Epoch 45 | Train Loss: 0.2303 | Val Loss: 0.2937
Epoch 46 | Train Loss: 0.2058 | Val Loss: 0.2908
Epoch 47 | Train Loss: 0.2139 | Val Loss: 0.2958
Epoch 48 | Train Loss: 0.2036 | Val Loss: 0.3058
Epoch 49 | Train Loss: 0.2121 | Val Loss: 0.2850
Epoch 50 | Train Loss: 0.1971 | Val Loss: 0.2802
‚úÖ Final model saved: Checkpoints/Classifier-2.1/icy-sweep-1/final_model.pt

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:162: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  907
‚ùå Incorrect predictions:  104
 Total tested images: 1011
 Accuracy: 89.71%
