Epoch 1 | Train Loss: 1.4770 | Val Loss: 1.0863
Epoch 2 | Train Loss: 0.5618 | Val Loss: 0.6148
Epoch 3 | Train Loss: 0.5172 | Val Loss: 0.4956
Epoch 4 | Train Loss: 0.4649 | Val Loss: 0.4396
Epoch 5 | Train Loss: 0.4489 | Val Loss: 0.4488
Epoch 6 | Train Loss: 0.4103 | Val Loss: 0.4332
Epoch 7 | Train Loss: 0.4002 | Val Loss: 0.4558
Epoch 8 | Train Loss: 0.3763 | Val Loss: 0.4371
Epoch 9 | Train Loss: 0.4111 | Val Loss: 0.4270
Epoch 10 | Train Loss: 0.3886 | Val Loss: 0.3961
Epoch 11 | Train Loss: 0.3842 | Val Loss: 0.3815
Epoch 12 | Train Loss: 0.3942 | Val Loss: 0.3947
Epoch 13 | Train Loss: 0.3642 | Val Loss: 0.3799
Epoch 14 | Train Loss: 0.3747 | Val Loss: 0.4455
Epoch 15 | Train Loss: 0.3452 | Val Loss: 0.4084
Epoch 16 | Train Loss: 0.3502 | Val Loss: 0.3653
Epoch 17 | Train Loss: 0.3551 | Val Loss: 0.3467
Epoch 18 | Train Loss: 0.3286 | Val Loss: 0.3745
Epoch 19 | Train Loss: 0.3380 | Val Loss: 0.3915
Epoch 20 | Train Loss: 0.3718 | Val Loss: 0.3542
Epoch 21 | Train Loss: 0.3417 | Val Loss: 0.3540
Epoch 22 | Train Loss: 0.3398 | Val Loss: 0.3805
Epoch 23 | Train Loss: 0.3419 | Val Loss: 0.3537
Epoch 24 | Train Loss: 0.3466 | Val Loss: 0.3823
Epoch 25 | Train Loss: 0.3281 | Val Loss: 0.3603
Epoch 26 | Train Loss: 0.3461 | Val Loss: 0.3697
Epoch 27 | Train Loss: 0.3652 | Val Loss: 0.4047
Epoch 28 | Train Loss: 0.3473 | Val Loss: 0.3901
Epoch 29 | Train Loss: 0.3771 | Val Loss: 0.3612
Epoch 30 | Train Loss: 0.3209 | Val Loss: 0.3924
Epoch 31 | Train Loss: 0.3151 | Val Loss: 0.3759
Epoch 32 | Train Loss: 0.3167 | Val Loss: 0.3973
Epoch 33 | Train Loss: 0.3294 | Val Loss: 0.3647
Epoch 34 | Train Loss: 0.3073 | Val Loss: 0.3574
Epoch 35 | Train Loss: 0.3131 | Val Loss: 0.3364
Epoch 36 | Train Loss: 0.3078 | Val Loss: 0.3895
Epoch 37 | Train Loss: 0.3247 | Val Loss: 0.4000
Epoch 38 | Train Loss: 0.3172 | Val Loss: 0.3645
Epoch 39 | Train Loss: 0.3065 | Val Loss: 0.3483
Epoch 40 | Train Loss: 0.2948 | Val Loss: 0.3824
Epoch 41 | Train Loss: 0.3324 | Val Loss: 0.3534
Epoch 42 | Train Loss: 0.3068 | Val Loss: 0.3859
Epoch 43 | Train Loss: 0.3073 | Val Loss: 0.4012
Epoch 44 | Train Loss: 0.3051 | Val Loss: 0.3717
Epoch 45 | Train Loss: 0.2967 | Val Loss: 0.3841
Epoch 46 | Train Loss: 0.3170 | Val Loss: 0.3750
Epoch 47 | Train Loss: 0.2740 | Val Loss: 0.3610
Epoch 48 | Train Loss: 0.2920 | Val Loss: 0.3887
Epoch 49 | Train Loss: 0.2861 | Val Loss: 0.3728
Epoch 50 | Train Loss: 0.3089 | Val Loss: 0.4297

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  832
‚ùå Incorrect predictions:  179
 Total tested images: 1011
 Accuracy: 82.29475766567754%
