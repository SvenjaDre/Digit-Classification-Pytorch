Epoch 1 | Train Loss: 0.7318 | Val Loss: 0.6320
Epoch 2 | Train Loss: 0.4819 | Val Loss: 0.5989
Epoch 3 | Train Loss: 0.4251 | Val Loss: 0.4391
Epoch 4 | Train Loss: 0.3126 | Val Loss: 0.3772
Epoch 5 | Train Loss: 0.2674 | Val Loss: 0.3353
Epoch 6 | Train Loss: 0.2162 | Val Loss: 0.3136
Epoch 7 | Train Loss: 0.1733 | Val Loss: 0.4263
Epoch 8 | Train Loss: 0.1720 | Val Loss: 0.2855
Epoch 9 | Train Loss: 0.1278 | Val Loss: 0.2954
Epoch 10 | Train Loss: 0.0975 | Val Loss: 0.4152
Epoch 11 | Train Loss: 0.1211 | Val Loss: 0.2700
Epoch 12 | Train Loss: 0.0919 | Val Loss: 0.3679
Epoch 13 | Train Loss: 0.0690 | Val Loss: 0.3737
Epoch 14 | Train Loss: 0.0487 | Val Loss: 0.3624
Epoch 15 | Train Loss: 0.0489 | Val Loss: 0.3293
Epoch 16 | Train Loss: 0.0590 | Val Loss: 0.3704
Epoch 17 | Train Loss: 0.0474 | Val Loss: 0.4692
Epoch 18 | Train Loss: 0.0458 | Val Loss: 0.3733
Epoch 19 | Train Loss: 0.0400 | Val Loss: 0.3601
Epoch 20 | Train Loss: 0.0454 | Val Loss: 0.3508
Epoch 21 | Train Loss: 0.0201 | Val Loss: 0.3247
Epoch 22 | Train Loss: 0.0113 | Val Loss: 0.3694
Epoch 23 | Train Loss: 0.0170 | Val Loss: 0.4554
Epoch 24 | Train Loss: 0.0195 | Val Loss: 0.3987
Epoch 25 | Train Loss: 0.0151 | Val Loss: 0.6520
Epoch 26 | Train Loss: 0.0347 | Val Loss: 0.4436
Epoch 27 | Train Loss: 0.0332 | Val Loss: 0.4974
Epoch 28 | Train Loss: 0.0326 | Val Loss: 0.5556
Epoch 29 | Train Loss: 0.0342 | Val Loss: 0.3962
Epoch 30 | Train Loss: 0.0213 | Val Loss: 0.4419
Epoch 31 | Train Loss: 0.0112 | Val Loss: 0.3814
Epoch 32 | Train Loss: 0.0107 | Val Loss: 0.4611
Epoch 33 | Train Loss: 0.0042 | Val Loss: 0.4457
Epoch 34 | Train Loss: 0.0056 | Val Loss: 0.4754
Epoch 35 | Train Loss: 0.0166 | Val Loss: 0.4373
Epoch 36 | Train Loss: 0.0092 | Val Loss: 0.5254
Epoch 37 | Train Loss: 0.0115 | Val Loss: 0.5815
Epoch 38 | Train Loss: 0.0171 | Val Loss: 0.4786
Epoch 39 | Train Loss: 0.0074 | Val Loss: 0.5032
Epoch 40 | Train Loss: 0.0147 | Val Loss: 0.4760
Epoch 41 | Train Loss: 0.0260 | Val Loss: 0.5026
Epoch 42 | Train Loss: 0.0173 | Val Loss: 0.4689
Epoch 43 | Train Loss: 0.0072 | Val Loss: 0.5186
Epoch 44 | Train Loss: 0.0175 | Val Loss: 0.5248
Epoch 45 | Train Loss: 0.0226 | Val Loss: 0.5695
Epoch 46 | Train Loss: 0.0269 | Val Loss: 0.4894
Epoch 47 | Train Loss: 0.0131 | Val Loss: 0.4785
Epoch 48 | Train Loss: 0.0211 | Val Loss: 0.4216
Epoch 49 | Train Loss: 0.0127 | Val Loss: 0.5570
Epoch 50 | Train Loss: 0.0103 | Val Loss: 0.5452

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  953
‚ùå Incorrect predictions:  58
 Total tested images: 1011
 Accuracy: 94.26310583580614%
