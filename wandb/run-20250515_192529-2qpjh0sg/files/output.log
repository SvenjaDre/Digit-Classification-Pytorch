Epoch 1 | Train Loss: 1.0318 | Val Loss: 0.9306
Epoch 2 | Train Loss: 0.7859 | Val Loss: 0.6805
Epoch 3 | Train Loss: 0.6301 | Val Loss: 0.5810
Epoch 4 | Train Loss: 0.5679 | Val Loss: 0.5495
Epoch 5 | Train Loss: 0.5287 | Val Loss: 0.5136
Epoch 6 | Train Loss: 0.5101 | Val Loss: 0.5385
Epoch 7 | Train Loss: 0.4986 | Val Loss: 0.4857
Epoch 8 | Train Loss: 0.4815 | Val Loss: 0.4781
Epoch 9 | Train Loss: 0.4660 | Val Loss: 0.4604
Epoch 10 | Train Loss: 0.4510 | Val Loss: 0.4512
Epoch 11 | Train Loss: 0.4487 | Val Loss: 0.4423
Epoch 12 | Train Loss: 0.4381 | Val Loss: 0.4477
Epoch 13 | Train Loss: 0.4141 | Val Loss: 0.4506
Epoch 14 | Train Loss: 0.4188 | Val Loss: 0.4167
Epoch 15 | Train Loss: 0.4156 | Val Loss: 0.4713
Epoch 16 | Train Loss: 0.4123 | Val Loss: 0.4046
Epoch 17 | Train Loss: 0.3966 | Val Loss: 0.4145
Epoch 18 | Train Loss: 0.3806 | Val Loss: 0.4117
Epoch 19 | Train Loss: 0.3796 | Val Loss: 0.3937
Epoch 20 | Train Loss: 0.3624 | Val Loss: 0.3863
Epoch 21 | Train Loss: 0.3629 | Val Loss: 0.3824
Epoch 22 | Train Loss: 0.3597 | Val Loss: 0.3733
Epoch 23 | Train Loss: 0.3464 | Val Loss: 0.3609
Epoch 24 | Train Loss: 0.3426 | Val Loss: 0.3839
Epoch 25 | Train Loss: 0.3438 | Val Loss: 0.4192
Epoch 26 | Train Loss: 0.3494 | Val Loss: 0.3668
Epoch 27 | Train Loss: 0.3339 | Val Loss: 0.3456
Epoch 28 | Train Loss: 0.3177 | Val Loss: 0.3435
Epoch 29 | Train Loss: 0.3219 | Val Loss: 0.3471
Epoch 30 | Train Loss: 0.3186 | Val Loss: 0.3331
Epoch 31 | Train Loss: 0.3136 | Val Loss: 0.3460
Epoch 32 | Train Loss: 0.3066 | Val Loss: 0.3335
Epoch 33 | Train Loss: 0.2991 | Val Loss: 0.3414
Epoch 34 | Train Loss: 0.3052 | Val Loss: 0.3460
Epoch 35 | Train Loss: 0.2975 | Val Loss: 0.3440
Epoch 36 | Train Loss: 0.2948 | Val Loss: 0.3360
Epoch 37 | Train Loss: 0.2861 | Val Loss: 0.3307
Epoch 38 | Train Loss: 0.2816 | Val Loss: 0.3108
Epoch 39 | Train Loss: 0.2787 | Val Loss: 0.3139
Epoch 40 | Train Loss: 0.2716 | Val Loss: 0.3087
Epoch 41 | Train Loss: 0.2747 | Val Loss: 0.3058
Epoch 42 | Train Loss: 0.2732 | Val Loss: 0.2974
Epoch 43 | Train Loss: 0.2605 | Val Loss: 0.3334
Epoch 44 | Train Loss: 0.2545 | Val Loss: 0.3063
Epoch 45 | Train Loss: 0.2517 | Val Loss: 0.3032
Epoch 46 | Train Loss: 0.2539 | Val Loss: 0.3245
Epoch 47 | Train Loss: 0.2433 | Val Loss: 0.2987
Epoch 48 | Train Loss: 0.2458 | Val Loss: 0.3069
Epoch 49 | Train Loss: 0.2363 | Val Loss: 0.2865
Epoch 50 | Train Loss: 0.2374 | Val Loss: 0.2927

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  876
‚ùå Incorrect predictions:  135
 Total tested images: 1011
 Accuracy: 86.64688427299704%
