Epoch 1 | Train Loss: 2.3619 | Val Loss: 0.9067
Epoch 2 | Train Loss: 0.7415 | Val Loss: 0.6345
Epoch 3 | Train Loss: 0.6425 | Val Loss: 0.6028
Epoch 4 | Train Loss: 0.6196 | Val Loss: 0.5556
Epoch 5 | Train Loss: 0.5746 | Val Loss: 0.5595
Epoch 6 | Train Loss: 0.5174 | Val Loss: 0.4720
Epoch 7 | Train Loss: 0.4198 | Val Loss: 0.4023
Epoch 8 | Train Loss: 0.3776 | Val Loss: 0.3043
Epoch 9 | Train Loss: 0.3717 | Val Loss: 0.3390
Epoch 10 | Train Loss: 0.3487 | Val Loss: 0.3025
Epoch 11 | Train Loss: 0.3414 | Val Loss: 0.2709
Epoch 12 | Train Loss: 0.3198 | Val Loss: 0.2772
Epoch 13 | Train Loss: 0.3027 | Val Loss: 0.2803
Epoch 14 | Train Loss: 0.3144 | Val Loss: 0.2716
Epoch 15 | Train Loss: 0.2991 | Val Loss: 0.2779
Epoch 16 | Train Loss: 0.2915 | Val Loss: 0.2748
Epoch 17 | Train Loss: 0.2845 | Val Loss: 0.3202
Epoch 18 | Train Loss: 0.2818 | Val Loss: 0.2834
Epoch 19 | Train Loss: 0.2763 | Val Loss: 0.2502
Epoch 20 | Train Loss: 0.2981 | Val Loss: 0.2810
Epoch 21 | Train Loss: 0.2867 | Val Loss: 0.2402
Epoch 22 | Train Loss: 0.2639 | Val Loss: 0.2379
Epoch 23 | Train Loss: 0.2661 | Val Loss: 0.2259
Epoch 24 | Train Loss: 0.2448 | Val Loss: 0.2634
Epoch 25 | Train Loss: 0.2655 | Val Loss: 0.2735
Epoch 26 | Train Loss: 0.2580 | Val Loss: 0.2333
Epoch 27 | Train Loss: 0.2679 | Val Loss: 0.2363
Epoch 28 | Train Loss: 0.2392 | Val Loss: 0.2356
Epoch 29 | Train Loss: 0.2521 | Val Loss: 0.2514
Epoch 30 | Train Loss: 0.2442 | Val Loss: 0.2436
Epoch 31 | Train Loss: 0.2488 | Val Loss: 0.2381
Epoch 32 | Train Loss: 0.2239 | Val Loss: 0.2464
Epoch 33 | Train Loss: 0.2288 | Val Loss: 0.2294
Epoch 34 | Train Loss: 0.2333 | Val Loss: 0.2332
Epoch 35 | Train Loss: 0.2281 | Val Loss: 0.2378
Epoch 36 | Train Loss: 0.2236 | Val Loss: 0.2246
Epoch 37 | Train Loss: 0.2407 | Val Loss: 0.2080
Epoch 38 | Train Loss: 0.2107 | Val Loss: 0.2558
Epoch 39 | Train Loss: 0.2296 | Val Loss: 0.2213
Epoch 40 | Train Loss: 0.2494 | Val Loss: 0.2150
Epoch 41 | Train Loss: 0.2287 | Val Loss: 0.2892
Epoch 42 | Train Loss: 0.2183 | Val Loss: 0.2143
Epoch 43 | Train Loss: 0.2280 | Val Loss: 0.2246
Epoch 44 | Train Loss: 0.2161 | Val Loss: 0.2330
Epoch 45 | Train Loss: 0.2100 | Val Loss: 0.2254
Epoch 46 | Train Loss: 0.2020 | Val Loss: 0.2392
Epoch 47 | Train Loss: 0.2024 | Val Loss: 0.2167
Epoch 48 | Train Loss: 0.2057 | Val Loss: 0.2386
Epoch 49 | Train Loss: 0.2058 | Val Loss: 0.1899
Epoch 50 | Train Loss: 0.1994 | Val Loss: 0.2444

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  871
‚ùå Incorrect predictions:  140
 Total tested images: 1011
 Accuracy: 86.15232443125618%
