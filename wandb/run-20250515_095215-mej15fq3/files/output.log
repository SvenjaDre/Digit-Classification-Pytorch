Epoch 1 | Train Loss: 0.6891 | Val Loss: 0.5031
Epoch 2 | Train Loss: 0.4982 | Val Loss: 0.4785
Epoch 3 | Train Loss: 0.3782 | Val Loss: 0.3641
Epoch 4 | Train Loss: 0.3177 | Val Loss: 0.3318
Epoch 5 | Train Loss: 0.2604 | Val Loss: 0.3275
Epoch 6 | Train Loss: 0.2082 | Val Loss: 0.3765
Epoch 7 | Train Loss: 0.1769 | Val Loss: 0.2944
Epoch 8 | Train Loss: 0.1567 | Val Loss: 0.2858
Epoch 9 | Train Loss: 0.1075 | Val Loss: 0.3083
Epoch 10 | Train Loss: 0.1001 | Val Loss: 0.3109
Epoch 11 | Train Loss: 0.0762 | Val Loss: 0.2494
Epoch 12 | Train Loss: 0.0596 | Val Loss: 0.2936
Epoch 13 | Train Loss: 0.0672 | Val Loss: 0.3115
Epoch 14 | Train Loss: 0.0462 | Val Loss: 0.2620
Epoch 15 | Train Loss: 0.0355 | Val Loss: 0.3110
Epoch 16 | Train Loss: 0.0438 | Val Loss: 0.3082
Epoch 17 | Train Loss: 0.0451 | Val Loss: 0.2722
Epoch 18 | Train Loss: 0.0276 | Val Loss: 0.3240
Epoch 19 | Train Loss: 0.0325 | Val Loss: 0.3451
Epoch 20 | Train Loss: 0.0214 | Val Loss: 0.3738
Epoch 21 | Train Loss: 0.0215 | Val Loss: 0.3934
Epoch 22 | Train Loss: 0.0321 | Val Loss: 0.3679
Epoch 23 | Train Loss: 0.0526 | Val Loss: 0.3305
Epoch 24 | Train Loss: 0.0419 | Val Loss: 0.3898
Epoch 25 | Train Loss: 0.0108 | Val Loss: 0.3236
Epoch 26 | Train Loss: 0.0204 | Val Loss: 0.3265
Epoch 27 | Train Loss: 0.0058 | Val Loss: 0.3954
Epoch 28 | Train Loss: 0.0067 | Val Loss: 0.4060
Epoch 29 | Train Loss: 0.0118 | Val Loss: 0.4138
Epoch 30 | Train Loss: 0.0243 | Val Loss: 0.3537
Epoch 31 | Train Loss: 0.0241 | Val Loss: 0.3657
Epoch 32 | Train Loss: 0.0184 | Val Loss: 0.3668
Epoch 33 | Train Loss: 0.0138 | Val Loss: 0.4023
Epoch 34 | Train Loss: 0.0199 | Val Loss: 0.3468
Epoch 35 | Train Loss: 0.0154 | Val Loss: 0.4187
Epoch 36 | Train Loss: 0.0188 | Val Loss: 0.3877
Epoch 37 | Train Loss: 0.0297 | Val Loss: 0.3547
Epoch 38 | Train Loss: 0.0175 | Val Loss: 0.4443
Epoch 39 | Train Loss: 0.0200 | Val Loss: 0.4203
Epoch 40 | Train Loss: 0.0176 | Val Loss: 0.4540
Epoch 41 | Train Loss: 0.0345 | Val Loss: 0.4054
Epoch 42 | Train Loss: 0.0087 | Val Loss: 0.4084
Epoch 43 | Train Loss: 0.0097 | Val Loss: 0.4218
Epoch 44 | Train Loss: 0.0121 | Val Loss: 0.4323
Epoch 45 | Train Loss: 0.0030 | Val Loss: 0.4121
Epoch 46 | Train Loss: 0.0066 | Val Loss: 0.4071
Epoch 47 | Train Loss: 0.0087 | Val Loss: 0.4127
Epoch 48 | Train Loss: 0.0049 | Val Loss: 0.3677
Epoch 49 | Train Loss: 0.0193 | Val Loss: 0.4109
Epoch 50 | Train Loss: 0.0233 | Val Loss: 0.4256

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:143: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  962
‚ùå Incorrect predictions:  49
 Total tested images: 1011
 Accuracy: 95.15331355093967%
