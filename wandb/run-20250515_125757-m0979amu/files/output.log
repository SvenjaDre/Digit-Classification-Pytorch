Epoch 1 | Train Loss: 0.6802 | Val Loss: 0.4867
Epoch 2 | Train Loss: 0.4619 | Val Loss: 0.4453
Epoch 3 | Train Loss: 0.3658 | Val Loss: 0.3603
Epoch 4 | Train Loss: 0.2812 | Val Loss: 0.2796
Epoch 5 | Train Loss: 0.2436 | Val Loss: 0.2532
Epoch 6 | Train Loss: 0.1877 | Val Loss: 0.3321
Epoch 7 | Train Loss: 0.1503 | Val Loss: 0.2918
Epoch 8 | Train Loss: 0.1250 | Val Loss: 0.2940
Epoch 9 | Train Loss: 0.1068 | Val Loss: 0.2302
Epoch 10 | Train Loss: 0.0852 | Val Loss: 0.2945
Epoch 11 | Train Loss: 0.0689 | Val Loss: 0.3399
Epoch 12 | Train Loss: 0.0684 | Val Loss: 0.2794
Epoch 13 | Train Loss: 0.0514 | Val Loss: 0.3264
Epoch 14 | Train Loss: 0.0446 | Val Loss: 0.3062
Epoch 15 | Train Loss: 0.0407 | Val Loss: 0.3175

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:143: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  945
‚ùå Incorrect predictions:  66
 Total tested images: 1011
 Accuracy: 93.47181008902076%
