Epoch 1 | Train Loss: 0.8040 | Val Loss: 0.6464
Epoch 2 | Train Loss: 0.5726 | Val Loss: 0.5246
Epoch 3 | Train Loss: 0.4966 | Val Loss: 0.4627
Epoch 4 | Train Loss: 0.4235 | Val Loss: 0.3683
Epoch 5 | Train Loss: 0.3627 | Val Loss: 0.3519
Epoch 6 | Train Loss: 0.3074 | Val Loss: 0.3251
Epoch 7 | Train Loss: 0.2631 | Val Loss: 0.2937
Epoch 8 | Train Loss: 0.2463 | Val Loss: 0.2987
Epoch 9 | Train Loss: 0.2308 | Val Loss: 0.2903
Epoch 10 | Train Loss: 0.1825 | Val Loss: 0.2458
Epoch 11 | Train Loss: 0.1567 | Val Loss: 0.2899
Epoch 12 | Train Loss: 0.1340 | Val Loss: 0.2401
Epoch 13 | Train Loss: 0.1228 | Val Loss: 0.3085
Epoch 14 | Train Loss: 0.1087 | Val Loss: 0.2918
Epoch 15 | Train Loss: 0.1046 | Val Loss: 0.4119
Epoch 16 | Train Loss: 0.1328 | Val Loss: 0.3185
Epoch 17 | Train Loss: 0.0891 | Val Loss: 0.2497
Epoch 18 | Train Loss: 0.0586 | Val Loss: 0.2825
Epoch 19 | Train Loss: 0.0450 | Val Loss: 0.3280
Epoch 20 | Train Loss: 0.0493 | Val Loss: 0.3351
Epoch 21 | Train Loss: 0.0789 | Val Loss: 0.3088
Epoch 22 | Train Loss: 0.0501 | Val Loss: 0.3730
Epoch 23 | Train Loss: 0.0483 | Val Loss: 0.3206
Epoch 24 | Train Loss: 0.0372 | Val Loss: 0.3726
Epoch 25 | Train Loss: 0.0309 | Val Loss: 0.2911
Epoch 26 | Train Loss: 0.0469 | Val Loss: 0.3359
Epoch 27 | Train Loss: 0.0299 | Val Loss: 0.3040
Epoch 28 | Train Loss: 0.0257 | Val Loss: 0.3227
Epoch 29 | Train Loss: 0.0265 | Val Loss: 0.4121
Epoch 30 | Train Loss: 0.0249 | Val Loss: 0.3592
Epoch 31 | Train Loss: 0.0230 | Val Loss: 0.3359
Epoch 32 | Train Loss: 0.0177 | Val Loss: 0.3373
Epoch 33 | Train Loss: 0.0083 | Val Loss: 0.3408
Epoch 34 | Train Loss: 0.0158 | Val Loss: 0.3763
Epoch 35 | Train Loss: 0.0174 | Val Loss: 0.3493
Epoch 36 | Train Loss: 0.0123 | Val Loss: 0.3396
Epoch 37 | Train Loss: 0.0099 | Val Loss: 0.3489
Epoch 38 | Train Loss: 0.0126 | Val Loss: 0.3923
Epoch 39 | Train Loss: 0.0468 | Val Loss: 0.4242
Epoch 40 | Train Loss: 0.0386 | Val Loss: 0.3433
Epoch 41 | Train Loss: 0.0138 | Val Loss: 0.3702
Epoch 42 | Train Loss: 0.0179 | Val Loss: 0.4018
Epoch 43 | Train Loss: 0.0130 | Val Loss: 0.3321
Epoch 44 | Train Loss: 0.0079 | Val Loss: 0.4230
Epoch 45 | Train Loss: 0.0053 | Val Loss: 0.4028
Epoch 46 | Train Loss: 0.0100 | Val Loss: 0.4330
Epoch 47 | Train Loss: 0.0106 | Val Loss: 0.4649
Epoch 48 | Train Loss: 0.0122 | Val Loss: 0.4746
Epoch 49 | Train Loss: 0.0101 | Val Loss: 0.4809
Epoch 50 | Train Loss: 0.0221 | Val Loss: 0.5277

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  927
‚ùå Incorrect predictions:  84
 Total tested images: 1011
 Accuracy: 91.69139465875371%
