Epoch 1 | Train Loss: 1.0299 | Val Loss: 0.9096
Epoch 2 | Train Loss: 0.7811 | Val Loss: 0.6591
Epoch 3 | Train Loss: 0.6068 | Val Loss: 0.5398
Epoch 4 | Train Loss: 0.5518 | Val Loss: 0.5172
Epoch 5 | Train Loss: 0.5145 | Val Loss: 0.5067
Epoch 6 | Train Loss: 0.5016 | Val Loss: 0.4946
Epoch 7 | Train Loss: 0.4910 | Val Loss: 0.4623
Epoch 8 | Train Loss: 0.4674 | Val Loss: 0.4545
Epoch 9 | Train Loss: 0.4528 | Val Loss: 0.4407
Epoch 10 | Train Loss: 0.4269 | Val Loss: 0.4551
Epoch 11 | Train Loss: 0.4222 | Val Loss: 0.4214
Epoch 12 | Train Loss: 0.4127 | Val Loss: 0.4494
Epoch 13 | Train Loss: 0.4184 | Val Loss: 0.4136
Epoch 14 | Train Loss: 0.4001 | Val Loss: 0.4299
Epoch 15 | Train Loss: 0.3790 | Val Loss: 0.4019
Epoch 16 | Train Loss: 0.3633 | Val Loss: 0.3784
Epoch 17 | Train Loss: 0.3516 | Val Loss: 0.3744
Epoch 18 | Train Loss: 0.3415 | Val Loss: 0.3683
Epoch 19 | Train Loss: 0.3328 | Val Loss: 0.3704
Epoch 20 | Train Loss: 0.3403 | Val Loss: 0.3730
Epoch 21 | Train Loss: 0.3275 | Val Loss: 0.3798
Epoch 22 | Train Loss: 0.3146 | Val Loss: 0.3655
Epoch 23 | Train Loss: 0.3202 | Val Loss: 0.3610
Epoch 24 | Train Loss: 0.3119 | Val Loss: 0.3698
Epoch 25 | Train Loss: 0.3010 | Val Loss: 0.3618
Epoch 26 | Train Loss: 0.2984 | Val Loss: 0.3851
Epoch 27 | Train Loss: 0.2891 | Val Loss: 0.3628
Epoch 28 | Train Loss: 0.2815 | Val Loss: 0.3543
Epoch 29 | Train Loss: 0.2799 | Val Loss: 0.3509
Epoch 30 | Train Loss: 0.2641 | Val Loss: 0.3561
Epoch 31 | Train Loss: 0.2675 | Val Loss: 0.3355
Epoch 32 | Train Loss: 0.2619 | Val Loss: 0.4479
Epoch 33 | Train Loss: 0.2669 | Val Loss: 0.3350
Epoch 34 | Train Loss: 0.2476 | Val Loss: 0.3583
Epoch 35 | Train Loss: 0.2457 | Val Loss: 0.3471
Epoch 36 | Train Loss: 0.2590 | Val Loss: 0.3414
Epoch 37 | Train Loss: 0.2440 | Val Loss: 0.3315
Epoch 38 | Train Loss: 0.2314 | Val Loss: 0.3385
Epoch 39 | Train Loss: 0.2278 | Val Loss: 0.3337
Epoch 40 | Train Loss: 0.2135 | Val Loss: 0.3250
Epoch 41 | Train Loss: 0.2112 | Val Loss: 0.3343
Epoch 42 | Train Loss: 0.2132 | Val Loss: 0.3332
Epoch 43 | Train Loss: 0.2006 | Val Loss: 0.3246
Epoch 44 | Train Loss: 0.2100 | Val Loss: 0.3404
Epoch 45 | Train Loss: 0.2035 | Val Loss: 0.3227
Epoch 46 | Train Loss: 0.1980 | Val Loss: 0.3390
Epoch 47 | Train Loss: 0.1906 | Val Loss: 0.3176
Epoch 48 | Train Loss: 0.1793 | Val Loss: 0.3199
Epoch 49 | Train Loss: 0.2040 | Val Loss: 0.3513
Epoch 50 | Train Loss: 0.1841 | Val Loss: 0.3181

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  882
‚ùå Incorrect predictions:  129
 Total tested images: 1011
 Accuracy: 87.24035608308606%
