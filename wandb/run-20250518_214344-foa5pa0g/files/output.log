Epoch 1 | Train Loss: 0.7473 | Val Loss: 0.6763
Epoch 2 | Train Loss: 0.5329 | Val Loss: 0.5444
Epoch 3 | Train Loss: 0.4853 | Val Loss: 0.4931
Epoch 4 | Train Loss: 0.4493 | Val Loss: 0.4745
Epoch 5 | Train Loss: 0.4080 | Val Loss: 0.4248
Epoch 6 | Train Loss: 0.3768 | Val Loss: 0.4265
Epoch 7 | Train Loss: 0.3520 | Val Loss: 0.4330
Epoch 8 | Train Loss: 0.3246 | Val Loss: 0.3755
Epoch 9 | Train Loss: 0.3090 | Val Loss: 0.4058
Epoch 10 | Train Loss: 0.3010 | Val Loss: 0.3962
Epoch 11 | Train Loss: 0.2695 | Val Loss: 0.3691
Epoch 12 | Train Loss: 0.2588 | Val Loss: 0.3276
Epoch 13 | Train Loss: 0.2435 | Val Loss: 0.3886
Epoch 14 | Train Loss: 0.2296 | Val Loss: 0.3449
Epoch 15 | Train Loss: 0.2090 | Val Loss: 0.3684
Epoch 16 | Train Loss: 0.2011 | Val Loss: 0.3372
Epoch 17 | Train Loss: 0.1838 | Val Loss: 0.3411
Epoch 18 | Train Loss: 0.1805 | Val Loss: 0.3294
Epoch 19 | Train Loss: 0.1689 | Val Loss: 0.3369
Epoch 20 | Train Loss: 0.1589 | Val Loss: 0.3314
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/zany-sweep-1/checkpoint_epoch_020.pt
Epoch 21 | Train Loss: 0.1496 | Val Loss: 0.3199
Epoch 22 | Train Loss: 0.1401 | Val Loss: 0.3182
Epoch 23 | Train Loss: 0.1332 | Val Loss: 0.3288
Epoch 24 | Train Loss: 0.1310 | Val Loss: 0.3159
Epoch 25 | Train Loss: 0.1165 | Val Loss: 0.3207
‚úÖ Final model saved: Checkpoints/Classifier-2.1/zany-sweep-1/final_model.pt

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:162: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  928
‚ùå Incorrect predictions:  83
 Total tested images: 1011
 Accuracy: 91.79%
