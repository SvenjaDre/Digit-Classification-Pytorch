Epoch 1 | Train Loss: 1.0565 | Val Loss: 0.9782
Epoch 2 | Train Loss: 0.8595 | Val Loss: 0.7776
Epoch 3 | Train Loss: 0.6743 | Val Loss: 0.6393
Epoch 4 | Train Loss: 0.5677 | Val Loss: 0.5694
Epoch 5 | Train Loss: 0.5233 | Val Loss: 0.5631
Epoch 6 | Train Loss: 0.5157 | Val Loss: 0.5426
Epoch 7 | Train Loss: 0.4817 | Val Loss: 0.5330
Epoch 8 | Train Loss: 0.4670 | Val Loss: 0.5577
Epoch 9 | Train Loss: 0.4599 | Val Loss: 0.5286
Epoch 10 | Train Loss: 0.4536 | Val Loss: 0.5399
Epoch 11 | Train Loss: 0.4365 | Val Loss: 0.5388
Epoch 12 | Train Loss: 0.4188 | Val Loss: 0.5016
Epoch 13 | Train Loss: 0.4135 | Val Loss: 0.4921
Epoch 14 | Train Loss: 0.3946 | Val Loss: 0.4982
Epoch 15 | Train Loss: 0.3868 | Val Loss: 0.4761
Epoch 16 | Train Loss: 0.3689 | Val Loss: 0.4807
Epoch 17 | Train Loss: 0.3779 | Val Loss: 0.4969
Epoch 18 | Train Loss: 0.3828 | Val Loss: 0.4629
Epoch 19 | Train Loss: 0.3532 | Val Loss: 0.4683
Epoch 20 | Train Loss: 0.3475 | Val Loss: 0.4473
Epoch 21 | Train Loss: 0.3448 | Val Loss: 0.4503
Epoch 22 | Train Loss: 0.3333 | Val Loss: 0.4481
Epoch 23 | Train Loss: 0.3356 | Val Loss: 0.4262
Epoch 24 | Train Loss: 0.3398 | Val Loss: 0.4454
Epoch 25 | Train Loss: 0.3145 | Val Loss: 0.4481
Epoch 26 | Train Loss: 0.3106 | Val Loss: 0.4209
Epoch 27 | Train Loss: 0.3156 | Val Loss: 0.4234
Epoch 28 | Train Loss: 0.2989 | Val Loss: 0.4058
Epoch 29 | Train Loss: 0.2923 | Val Loss: 0.3963
Epoch 30 | Train Loss: 0.2847 | Val Loss: 0.4082
Epoch 31 | Train Loss: 0.2862 | Val Loss: 0.3876
Epoch 32 | Train Loss: 0.2780 | Val Loss: 0.4021
Epoch 33 | Train Loss: 0.2666 | Val Loss: 0.3955
Epoch 34 | Train Loss: 0.2760 | Val Loss: 0.4594
Epoch 35 | Train Loss: 0.2916 | Val Loss: 0.4094
Epoch 36 | Train Loss: 0.2584 | Val Loss: 0.3664
Epoch 37 | Train Loss: 0.2481 | Val Loss: 0.3845
Epoch 38 | Train Loss: 0.2464 | Val Loss: 0.3736
Epoch 39 | Train Loss: 0.2358 | Val Loss: 0.3651
Epoch 40 | Train Loss: 0.2347 | Val Loss: 0.3537
Epoch 41 | Train Loss: 0.2332 | Val Loss: 0.3603
Epoch 42 | Train Loss: 0.2340 | Val Loss: 0.3786
Epoch 43 | Train Loss: 0.2237 | Val Loss: 0.3594
Epoch 44 | Train Loss: 0.2247 | Val Loss: 0.3381
Epoch 45 | Train Loss: 0.2242 | Val Loss: 0.3517
Epoch 46 | Train Loss: 0.2111 | Val Loss: 0.3412
Epoch 47 | Train Loss: 0.2150 | Val Loss: 0.3342
Epoch 48 | Train Loss: 0.2024 | Val Loss: 0.3427
Epoch 49 | Train Loss: 0.2058 | Val Loss: 0.3438
Epoch 50 | Train Loss: 0.1985 | Val Loss: 0.3307

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  881
‚ùå Incorrect predictions:  130
 Total tested images: 1011
 Accuracy: 87.1414441147379%
