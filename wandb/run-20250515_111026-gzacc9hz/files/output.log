Epoch 1 | Train Loss: 1.4489 | Val Loss: 0.6802
Epoch 2 | Train Loss: 0.5914 | Val Loss: 0.5644
Epoch 3 | Train Loss: 0.5090 | Val Loss: 0.3705
Epoch 4 | Train Loss: 0.4237 | Val Loss: 0.3984
Epoch 5 | Train Loss: 0.3668 | Val Loss: 0.3686
Epoch 6 | Train Loss: 0.3365 | Val Loss: 0.3944
Epoch 7 | Train Loss: 0.3190 | Val Loss: 0.3474
Epoch 8 | Train Loss: 0.3243 | Val Loss: 0.3187
Epoch 9 | Train Loss: 0.2737 | Val Loss: 0.3299
Epoch 10 | Train Loss: 0.2970 | Val Loss: 0.4072
Epoch 11 | Train Loss: 0.2875 | Val Loss: 0.3325
Epoch 12 | Train Loss: 0.2470 | Val Loss: 0.3360
Epoch 13 | Train Loss: 0.2186 | Val Loss: 0.2981
Epoch 14 | Train Loss: 0.1908 | Val Loss: 0.2959
Epoch 15 | Train Loss: 0.2131 | Val Loss: 0.3018
Epoch 16 | Train Loss: 0.1957 | Val Loss: 0.3033
Epoch 17 | Train Loss: 0.1870 | Val Loss: 0.2875
Epoch 18 | Train Loss: 0.2231 | Val Loss: 0.3020
Epoch 19 | Train Loss: 0.2117 | Val Loss: 0.3497
Epoch 20 | Train Loss: 0.1755 | Val Loss: 0.3143
Epoch 21 | Train Loss: 0.2066 | Val Loss: 0.3032
Epoch 22 | Train Loss: 0.1589 | Val Loss: 0.2841
Epoch 23 | Train Loss: 0.1716 | Val Loss: 0.2931
Epoch 24 | Train Loss: 0.1827 | Val Loss: 0.2774
Epoch 25 | Train Loss: 0.1618 | Val Loss: 0.3258
Epoch 26 | Train Loss: 0.1410 | Val Loss: 0.3040
Epoch 27 | Train Loss: 0.1224 | Val Loss: 0.3075
Epoch 28 | Train Loss: 0.1412 | Val Loss: 0.3158
Epoch 29 | Train Loss: 0.1417 | Val Loss: 0.3745
Epoch 30 | Train Loss: 0.1289 | Val Loss: 0.3045
Epoch 31 | Train Loss: 0.1701 | Val Loss: 0.3450
Epoch 32 | Train Loss: 0.1468 | Val Loss: 0.3587
Epoch 33 | Train Loss: 0.1731 | Val Loss: 0.4242
Epoch 34 | Train Loss: 0.1917 | Val Loss: 0.2778
Epoch 35 | Train Loss: 0.1492 | Val Loss: 0.3227
Epoch 36 | Train Loss: 0.1629 | Val Loss: 0.3598
Epoch 37 | Train Loss: 0.1382 | Val Loss: 0.3316
Epoch 38 | Train Loss: 0.0967 | Val Loss: 0.4341
Epoch 39 | Train Loss: 0.1547 | Val Loss: 0.3425
Epoch 40 | Train Loss: 0.1532 | Val Loss: 0.4110
Epoch 41 | Train Loss: 0.1569 | Val Loss: 0.3447
Epoch 42 | Train Loss: 0.1263 | Val Loss: 0.3776
Epoch 43 | Train Loss: 0.1206 | Val Loss: 0.3504
Epoch 44 | Train Loss: 0.1118 | Val Loss: 0.3677
Epoch 45 | Train Loss: 0.1307 | Val Loss: 0.4200
Epoch 46 | Train Loss: 0.1365 | Val Loss: 0.3703
Epoch 47 | Train Loss: 0.1195 | Val Loss: 0.3988
Epoch 48 | Train Loss: 0.1562 | Val Loss: 0.3328
Epoch 49 | Train Loss: 0.1826 | Val Loss: 0.3933
Epoch 50 | Train Loss: 0.1492 | Val Loss: 0.3614

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:143: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  900
‚ùå Incorrect predictions:  111
 Total tested images: 1011
 Accuracy: 89.02077151335311%
