Epoch 1 | Train Loss: 0.8110 | Val Loss: 0.7319
Epoch 2 | Train Loss: 0.5541 | Val Loss: 0.6501
Epoch 3 | Train Loss: 0.4710 | Val Loss: 0.6032
Epoch 4 | Train Loss: 0.4456 | Val Loss: 0.5631
Epoch 5 | Train Loss: 0.3862 | Val Loss: 0.5122
Epoch 6 | Train Loss: 0.3657 | Val Loss: 0.5014
Epoch 7 | Train Loss: 0.3372 | Val Loss: 0.4505
Epoch 8 | Train Loss: 0.3072 | Val Loss: 0.4551
Epoch 9 | Train Loss: 0.2971 | Val Loss: 0.4266
Epoch 10 | Train Loss: 0.2707 | Val Loss: 0.4355
Epoch 11 | Train Loss: 0.2523 | Val Loss: 0.4112
Epoch 12 | Train Loss: 0.2312 | Val Loss: 0.3819
Epoch 13 | Train Loss: 0.2059 | Val Loss: 0.3697
Epoch 14 | Train Loss: 0.1944 | Val Loss: 0.3664
Epoch 15 | Train Loss: 0.1783 | Val Loss: 0.3284
Epoch 16 | Train Loss: 0.1674 | Val Loss: 0.3247
Epoch 17 | Train Loss: 0.1592 | Val Loss: 0.3309
Epoch 18 | Train Loss: 0.1451 | Val Loss: 0.3558
Epoch 19 | Train Loss: 0.1481 | Val Loss: 0.3016
Epoch 20 | Train Loss: 0.1118 | Val Loss: 0.2958
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/icy-sweep-3/checkpoint_epoch_020.pt
Epoch 21 | Train Loss: 0.1053 | Val Loss: 0.3098
Epoch 22 | Train Loss: 0.1059 | Val Loss: 0.2914
Epoch 23 | Train Loss: 0.0880 | Val Loss: 0.2733
Epoch 24 | Train Loss: 0.0894 | Val Loss: 0.3035
Epoch 25 | Train Loss: 0.0780 | Val Loss: 0.2834
Epoch 26 | Train Loss: 0.0679 | Val Loss: 0.2962
Epoch 27 | Train Loss: 0.0659 | Val Loss: 0.3047
Epoch 28 | Train Loss: 0.0552 | Val Loss: 0.2781
Epoch 29 | Train Loss: 0.0470 | Val Loss: 0.2686
Epoch 30 | Train Loss: 0.0447 | Val Loss: 0.3159
Epoch 31 | Train Loss: 0.0647 | Val Loss: 0.2812
Epoch 32 | Train Loss: 0.0380 | Val Loss: 0.3017
Epoch 33 | Train Loss: 0.0329 | Val Loss: 0.2551
Epoch 34 | Train Loss: 0.0355 | Val Loss: 0.2779
Epoch 35 | Train Loss: 0.0277 | Val Loss: 0.2955
Epoch 36 | Train Loss: 0.0211 | Val Loss: 0.2856
Epoch 37 | Train Loss: 0.0209 | Val Loss: 0.2934
Epoch 38 | Train Loss: 0.0181 | Val Loss: 0.3668
Epoch 39 | Train Loss: 0.0360 | Val Loss: 0.3223
Epoch 40 | Train Loss: 0.0201 | Val Loss: 0.2838
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/icy-sweep-3/checkpoint_epoch_040.pt
Epoch 41 | Train Loss: 0.0146 | Val Loss: 0.2927
Epoch 42 | Train Loss: 0.0129 | Val Loss: 0.3125
Epoch 43 | Train Loss: 0.0189 | Val Loss: 0.3169
Epoch 44 | Train Loss: 0.0189 | Val Loss: 0.2678
Epoch 45 | Train Loss: 0.0093 | Val Loss: 0.3097
Epoch 46 | Train Loss: 0.0068 | Val Loss: 0.3017
Epoch 47 | Train Loss: 0.0044 | Val Loss: 0.3066
Epoch 48 | Train Loss: 0.0061 | Val Loss: 0.3110
Epoch 49 | Train Loss: 0.0041 | Val Loss: 0.2963
Epoch 50 | Train Loss: 0.0064 | Val Loss: 0.2953
Epoch 51 | Train Loss: 0.0657 | Val Loss: 0.2877
Epoch 52 | Train Loss: 0.0565 | Val Loss: 0.2925
Epoch 53 | Train Loss: 0.0250 | Val Loss: 0.2917
Epoch 54 | Train Loss: 0.0081 | Val Loss: 0.2803
Epoch 55 | Train Loss: 0.0089 | Val Loss: 0.2745
Epoch 56 | Train Loss: 0.0046 | Val Loss: 0.2950
Epoch 57 | Train Loss: 0.0039 | Val Loss: 0.2929
Epoch 58 | Train Loss: 0.0024 | Val Loss: 0.3122
Epoch 59 | Train Loss: 0.0019 | Val Loss: 0.3016
Epoch 60 | Train Loss: 0.0015 | Val Loss: 0.3115
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/icy-sweep-3/checkpoint_epoch_060.pt
Epoch 61 | Train Loss: 0.0018 | Val Loss: 0.3094
Epoch 62 | Train Loss: 0.0015 | Val Loss: 0.3071
Epoch 63 | Train Loss: 0.0012 | Val Loss: 0.3094
Epoch 64 | Train Loss: 0.0014 | Val Loss: 0.3113
Epoch 65 | Train Loss: 0.0012 | Val Loss: 0.3115
Epoch 66 | Train Loss: 0.0092 | Val Loss: 0.3474
Epoch 67 | Train Loss: 0.0068 | Val Loss: 0.3072
Epoch 68 | Train Loss: 0.0541 | Val Loss: 0.3033
Epoch 69 | Train Loss: 0.0296 | Val Loss: 0.3455
Epoch 70 | Train Loss: 0.0040 | Val Loss: 0.2934
Epoch 71 | Train Loss: 0.0042 | Val Loss: 0.3106
Epoch 72 | Train Loss: 0.0202 | Val Loss: 0.3023
Epoch 73 | Train Loss: 0.0029 | Val Loss: 0.2948
Epoch 74 | Train Loss: 0.0014 | Val Loss: 0.3172
Epoch 75 | Train Loss: 0.0016 | Val Loss: 0.3166
Epoch 76 | Train Loss: 0.0013 | Val Loss: 0.3128
Epoch 77 | Train Loss: 0.0009 | Val Loss: 0.3085
Epoch 78 | Train Loss: 0.0007 | Val Loss: 0.3193
Epoch 79 | Train Loss: 0.0015 | Val Loss: 0.3278
Epoch 80 | Train Loss: 0.0038 | Val Loss: 0.3471
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/icy-sweep-3/checkpoint_epoch_080.pt
Epoch 81 | Train Loss: 0.0008 | Val Loss: 0.3235
Epoch 82 | Train Loss: 0.0005 | Val Loss: 0.3168
Epoch 83 | Train Loss: 0.0005 | Val Loss: 0.3239
Epoch 84 | Train Loss: 0.0007 | Val Loss: 0.3251
Epoch 85 | Train Loss: 0.0004 | Val Loss: 0.3311
Epoch 86 | Train Loss: 0.0004 | Val Loss: 0.3302
Epoch 87 | Train Loss: 0.0003 | Val Loss: 0.3391
Epoch 88 | Train Loss: 0.0003 | Val Loss: 0.3342
Epoch 89 | Train Loss: 0.0003 | Val Loss: 0.3517
Epoch 90 | Train Loss: 0.0003 | Val Loss: 0.3488
Epoch 91 | Train Loss: 0.0003 | Val Loss: 0.3458
Epoch 92 | Train Loss: 0.0002 | Val Loss: 0.3470
Epoch 93 | Train Loss: 0.0002 | Val Loss: 0.3456
Epoch 94 | Train Loss: 0.0002 | Val Loss: 0.3480
Epoch 95 | Train Loss: 0.0002 | Val Loss: 0.3465
Epoch 96 | Train Loss: 0.0002 | Val Loss: 0.3632
Epoch 97 | Train Loss: 0.0004 | Val Loss: 0.3546
Epoch 98 | Train Loss: 0.0003 | Val Loss: 0.3757
Epoch 99 | Train Loss: 0.0003 | Val Loss: 0.3575
Epoch 100 | Train Loss: 0.0002 | Val Loss: 0.3734
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/icy-sweep-3/checkpoint_epoch_100.pt
‚úÖ Final model saved: Checkpoints/Classifier-2.1/icy-sweep-3/final_model.pt

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:162: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  952
‚ùå Incorrect predictions:  59
 Total tested images: 1011
 Accuracy: 94.16%
