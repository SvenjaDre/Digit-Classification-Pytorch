Epoch 1 | Train Loss: 1.6879 | Val Loss: 0.7338
Epoch 2 | Train Loss: 0.6138 | Val Loss: 0.5995
Epoch 3 | Train Loss: 0.5283 | Val Loss: 0.5015
Epoch 4 | Train Loss: 0.4911 | Val Loss: 0.4401
Epoch 5 | Train Loss: 0.4760 | Val Loss: 0.4167
Epoch 6 | Train Loss: 0.4181 | Val Loss: 0.4262
Epoch 7 | Train Loss: 0.3851 | Val Loss: 0.3753
Epoch 8 | Train Loss: 0.3395 | Val Loss: 0.3506
Epoch 9 | Train Loss: 0.3354 | Val Loss: 0.4020
Epoch 10 | Train Loss: 0.3260 | Val Loss: 0.3410
Epoch 11 | Train Loss: 0.3251 | Val Loss: 0.3311
Epoch 12 | Train Loss: 0.3090 | Val Loss: 0.3128
Epoch 13 | Train Loss: 0.3066 | Val Loss: 0.3245
Epoch 14 | Train Loss: 0.2872 | Val Loss: 0.3270
Epoch 15 | Train Loss: 0.2520 | Val Loss: 0.4241
Epoch 16 | Train Loss: 0.2598 | Val Loss: 0.2709
Epoch 17 | Train Loss: 0.2378 | Val Loss: 0.3198
Epoch 18 | Train Loss: 0.2409 | Val Loss: 0.3295
Epoch 19 | Train Loss: 0.2441 | Val Loss: 0.3275
Epoch 20 | Train Loss: 0.2026 | Val Loss: 0.3029
Epoch 21 | Train Loss: 0.1965 | Val Loss: 0.2829
Epoch 22 | Train Loss: 0.2189 | Val Loss: 0.3002
Epoch 23 | Train Loss: 0.1845 | Val Loss: 0.3041
Epoch 24 | Train Loss: 0.1902 | Val Loss: 0.2649
Epoch 25 | Train Loss: 0.2174 | Val Loss: 0.3349
Epoch 26 | Train Loss: 0.2128 | Val Loss: 0.3325
Epoch 27 | Train Loss: 0.2079 | Val Loss: 0.3097
Epoch 28 | Train Loss: 0.1668 | Val Loss: 0.2774
Epoch 29 | Train Loss: 0.1737 | Val Loss: 0.3169
Epoch 30 | Train Loss: 0.2296 | Val Loss: 0.3434
Epoch 31 | Train Loss: 0.1675 | Val Loss: 0.3084
Epoch 32 | Train Loss: 0.1443 | Val Loss: 0.2896
Epoch 33 | Train Loss: 0.1569 | Val Loss: 0.3420
Epoch 34 | Train Loss: 0.1987 | Val Loss: 0.3314
Epoch 35 | Train Loss: 0.1324 | Val Loss: 0.3035
Epoch 36 | Train Loss: 0.1416 | Val Loss: 0.3073
Epoch 37 | Train Loss: 0.1203 | Val Loss: 0.3106
Epoch 38 | Train Loss: 0.1259 | Val Loss: 0.3247
Epoch 39 | Train Loss: 0.1356 | Val Loss: 0.3103
Epoch 40 | Train Loss: 0.1257 | Val Loss: 0.2949
Epoch 41 | Train Loss: 0.1290 | Val Loss: 0.3820
Epoch 42 | Train Loss: 0.1275 | Val Loss: 0.3602
Epoch 43 | Train Loss: 0.1301 | Val Loss: 0.3292
Epoch 44 | Train Loss: 0.1360 | Val Loss: 0.3751
Epoch 45 | Train Loss: 0.1471 | Val Loss: 0.3586
Epoch 46 | Train Loss: 0.1033 | Val Loss: 0.3750
Epoch 47 | Train Loss: 0.1261 | Val Loss: 0.3268
Epoch 48 | Train Loss: 0.1386 | Val Loss: 0.3375
Epoch 49 | Train Loss: 0.1117 | Val Loss: 0.5760
Epoch 50 | Train Loss: 0.1478 | Val Loss: 0.3188

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  903
‚ùå Incorrect predictions:  108
 Total tested images: 1011
 Accuracy: 89.31750741839762%
