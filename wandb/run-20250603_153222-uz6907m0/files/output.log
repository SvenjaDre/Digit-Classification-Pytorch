üöÄ Starting run: trainsample_1915_run_5
Epoch 1 | Train Loss: 0.5959 | Val Loss: 0.5394 | Val Acc: 73.31% | Sens: 0.95 | Spec: 0.53 | AUC: 0.87
Epoch 2 | Train Loss: 0.4571 | Val Loss: 0.4033 | Val Acc: 82.33% | Sens: 0.84 | Spec: 0.81 | AUC: 0.90
Epoch 3 | Train Loss: 0.4078 | Val Loss: 0.4634 | Val Acc: 79.14% | Sens: 0.95 | Spec: 0.64 | AUC: 0.92
Epoch 4 | Train Loss: 0.3808 | Val Loss: 0.3628 | Val Acc: 83.83% | Sens: 0.91 | Spec: 0.77 | AUC: 0.93
Epoch 5 | Train Loss: 0.3580 | Val Loss: 0.3518 | Val Acc: 85.34% | Sens: 0.77 | Spec: 0.93 | AUC: 0.94
Epoch 6 | Train Loss: 0.3298 | Val Loss: 0.4026 | Val Acc: 83.65% | Sens: 0.96 | Spec: 0.72 | AUC: 0.94
Epoch 7 | Train Loss: 0.2982 | Val Loss: 0.3049 | Val Acc: 88.35% | Sens: 0.85 | Spec: 0.92 | AUC: 0.95
Epoch 8 | Train Loss: 0.2715 | Val Loss: 0.2910 | Val Acc: 89.29% | Sens: 0.85 | Spec: 0.93 | AUC: 0.96
Epoch 9 | Train Loss: 0.2498 | Val Loss: 0.3507 | Val Acc: 84.59% | Sens: 0.71 | Spec: 0.97 | AUC: 0.96
Epoch 10 | Train Loss: 0.2251 | Val Loss: 0.2810 | Val Acc: 90.60% | Sens: 0.96 | Spec: 0.85 | AUC: 0.96
Epoch 11 | Train Loss: 0.2128 | Val Loss: 0.3120 | Val Acc: 89.10% | Sens: 0.97 | Spec: 0.82 | AUC: 0.96
Epoch 12 | Train Loss: 0.2037 | Val Loss: 0.2470 | Val Acc: 90.79% | Sens: 0.92 | Spec: 0.89 | AUC: 0.97
Epoch 13 | Train Loss: 0.1699 | Val Loss: 0.2438 | Val Acc: 91.17% | Sens: 0.92 | Spec: 0.90 | AUC: 0.97
Epoch 14 | Train Loss: 0.1477 | Val Loss: 0.2512 | Val Acc: 91.35% | Sens: 0.93 | Spec: 0.89 | AUC: 0.97
Epoch 15 | Train Loss: 0.1368 | Val Loss: 0.2340 | Val Acc: 91.35% | Sens: 0.92 | Spec: 0.91 | AUC: 0.97
Epoch 16 | Train Loss: 0.1260 | Val Loss: 0.2568 | Val Acc: 90.41% | Sens: 0.86 | Spec: 0.94 | AUC: 0.97
Epoch 17 | Train Loss: 0.1080 | Val Loss: 0.2362 | Val Acc: 92.29% | Sens: 0.93 | Spec: 0.92 | AUC: 0.97
Epoch 18 | Train Loss: 0.1105 | Val Loss: 0.2299 | Val Acc: 91.92% | Sens: 0.92 | Spec: 0.92 | AUC: 0.97
Epoch 19 | Train Loss: 0.0968 | Val Loss: 0.2283 | Val Acc: 91.73% | Sens: 0.91 | Spec: 0.92 | AUC: 0.98
Epoch 20 | Train Loss: 0.0715 | Val Loss: 0.2301 | Val Acc: 92.48% | Sens: 0.92 | Spec: 0.93 | AUC: 0.98
Epoch 21 | Train Loss: 0.0630 | Val Loss: 0.2846 | Val Acc: 91.17% | Sens: 0.89 | Spec: 0.93 | AUC: 0.97
Epoch 22 | Train Loss: 0.0675 | Val Loss: 0.2411 | Val Acc: 92.86% | Sens: 0.96 | Spec: 0.90 | AUC: 0.98
Epoch 23 | Train Loss: 0.0764 | Val Loss: 0.2648 | Val Acc: 92.67% | Sens: 0.91 | Spec: 0.94 | AUC: 0.97
Epoch 24 | Train Loss: 0.0546 | Val Loss: 0.3005 | Val Acc: 92.11% | Sens: 0.90 | Spec: 0.94 | AUC: 0.97
Epoch 25 | Train Loss: 0.0564 | Val Loss: 0.3121 | Val Acc: 90.98% | Sens: 0.85 | Spec: 0.96 | AUC: 0.98
Epoch 26 | Train Loss: 0.0756 | Val Loss: 0.2393 | Val Acc: 92.86% | Sens: 0.94 | Spec: 0.92 | AUC: 0.98
Epoch 27 | Train Loss: 0.0458 | Val Loss: 0.2716 | Val Acc: 93.61% | Sens: 0.97 | Spec: 0.90 | AUC: 0.98
Epoch 28 | Train Loss: 0.0374 | Val Loss: 0.2440 | Val Acc: 93.61% | Sens: 0.95 | Spec: 0.92 | AUC: 0.98
Epoch 29 | Train Loss: 0.0468 | Val Loss: 0.2865 | Val Acc: 92.29% | Sens: 0.93 | Spec: 0.91 | AUC: 0.98
üö® Early stopping after 29 epochs.

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/Class_Gli_Men.py:260: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct: 562 | ‚ùå Incorrect: 44 | Total: 606
üéØ Test Accuracy: 92.74% | Sens: 0.93 | Spec: 0.92 | AUC: 0.98
