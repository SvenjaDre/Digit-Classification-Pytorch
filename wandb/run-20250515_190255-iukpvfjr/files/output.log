Epoch 1 | Train Loss: 5.4485 | Val Loss: 0.8454
Epoch 2 | Train Loss: 0.7179 | Val Loss: 0.6027
Epoch 3 | Train Loss: 0.5736 | Val Loss: 0.5559
Epoch 4 | Train Loss: 0.5576 | Val Loss: 0.5544
Epoch 5 | Train Loss: 0.4967 | Val Loss: 0.5329
Epoch 6 | Train Loss: 0.4296 | Val Loss: 0.4789
Epoch 7 | Train Loss: 0.3818 | Val Loss: 0.4815
Epoch 8 | Train Loss: 0.3688 | Val Loss: 0.4114
Epoch 9 | Train Loss: 0.3295 | Val Loss: 0.4122
Epoch 10 | Train Loss: 0.3261 | Val Loss: 0.4045
Epoch 11 | Train Loss: 0.3119 | Val Loss: 0.3786
Epoch 12 | Train Loss: 0.2940 | Val Loss: 0.3729
Epoch 13 | Train Loss: 0.2766 | Val Loss: 0.3677
Epoch 14 | Train Loss: 0.2850 | Val Loss: 0.3582
Epoch 15 | Train Loss: 0.2731 | Val Loss: 0.3482
Epoch 16 | Train Loss: 0.2569 | Val Loss: 0.3787
Epoch 17 | Train Loss: 0.2517 | Val Loss: 0.4140
Epoch 18 | Train Loss: 0.2691 | Val Loss: 0.3686
Epoch 19 | Train Loss: 0.2426 | Val Loss: 0.3400
Epoch 20 | Train Loss: 0.2192 | Val Loss: 0.3551
Epoch 21 | Train Loss: 0.2459 | Val Loss: 0.3573
Epoch 22 | Train Loss: 0.2344 | Val Loss: 0.3526
Epoch 23 | Train Loss: 0.2054 | Val Loss: 0.3617
Epoch 24 | Train Loss: 0.1937 | Val Loss: 0.3703
Epoch 25 | Train Loss: 0.1966 | Val Loss: 0.3975
Epoch 26 | Train Loss: 0.1936 | Val Loss: 0.3824
Epoch 27 | Train Loss: 0.1819 | Val Loss: 0.4139
Epoch 28 | Train Loss: 0.1773 | Val Loss: 0.3928
Epoch 29 | Train Loss: 0.1774 | Val Loss: 0.3985
Epoch 30 | Train Loss: 0.1711 | Val Loss: 0.4411
Epoch 31 | Train Loss: 0.1681 | Val Loss: 0.3911
Epoch 32 | Train Loss: 0.1662 | Val Loss: 0.3685
Epoch 33 | Train Loss: 0.1455 | Val Loss: 0.3790
Epoch 34 | Train Loss: 0.1456 | Val Loss: 0.4462
Epoch 35 | Train Loss: 0.1484 | Val Loss: 0.3598
Epoch 36 | Train Loss: 0.1503 | Val Loss: 0.3909
Epoch 37 | Train Loss: 0.1249 | Val Loss: 0.3837
Epoch 38 | Train Loss: 0.1386 | Val Loss: 0.3991
Epoch 39 | Train Loss: 0.1277 | Val Loss: 0.4082
Epoch 40 | Train Loss: 0.1342 | Val Loss: 0.4360
Epoch 41 | Train Loss: 0.1209 | Val Loss: 0.3931
Epoch 42 | Train Loss: 0.1119 | Val Loss: 0.3822
Epoch 43 | Train Loss: 0.1022 | Val Loss: 0.4010
Epoch 44 | Train Loss: 0.1055 | Val Loss: 0.4147
Epoch 45 | Train Loss: 0.0992 | Val Loss: 0.4100
Epoch 46 | Train Loss: 0.0960 | Val Loss: 0.4810
Epoch 47 | Train Loss: 0.1060 | Val Loss: 0.4165
Epoch 48 | Train Loss: 0.1052 | Val Loss: 0.3948
Epoch 49 | Train Loss: 0.1037 | Val Loss: 0.4444
Epoch 50 | Train Loss: 0.0905 | Val Loss: 0.4453

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  920
‚ùå Incorrect predictions:  91
 Total tested images: 1011
 Accuracy: 90.99901088031652%
