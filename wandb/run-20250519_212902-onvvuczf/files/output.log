Epoch 1 | Train Loss: 0.8504 | Val Loss: 0.6899
Epoch 2 | Train Loss: 0.5709 | Val Loss: 0.5362
Epoch 3 | Train Loss: 0.5093 | Val Loss: 0.4963
Epoch 4 | Train Loss: 0.4805 | Val Loss: 0.4697
Epoch 5 | Train Loss: 0.4609 | Val Loss: 0.4399
Epoch 6 | Train Loss: 0.4307 | Val Loss: 0.4458
Epoch 7 | Train Loss: 0.4022 | Val Loss: 0.3880
Epoch 8 | Train Loss: 0.3811 | Val Loss: 0.4341
Epoch 9 | Train Loss: 0.3673 | Val Loss: 0.3621
Epoch 10 | Train Loss: 0.3408 | Val Loss: 0.3768
Epoch 11 | Train Loss: 0.3192 | Val Loss: 0.3381
Epoch 12 | Train Loss: 0.2997 | Val Loss: 0.3519
Epoch 13 | Train Loss: 0.2910 | Val Loss: 0.3182
Epoch 14 | Train Loss: 0.2750 | Val Loss: 0.3226
Epoch 15 | Train Loss: 0.2614 | Val Loss: 0.3908
Epoch 16 | Train Loss: 0.2597 | Val Loss: 0.2867
Epoch 17 | Train Loss: 0.2403 | Val Loss: 0.2834
Epoch 18 | Train Loss: 0.2169 | Val Loss: 0.2785
Epoch 19 | Train Loss: 0.2053 | Val Loss: 0.2892
Epoch 20 | Train Loss: 0.1969 | Val Loss: 0.2757
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/dulcet-sweep-2/checkpoint_epoch_020.pt
Epoch 21 | Train Loss: 0.1984 | Val Loss: 0.2533
Epoch 22 | Train Loss: 0.1862 | Val Loss: 0.2716
Epoch 23 | Train Loss: 0.1815 | Val Loss: 0.2627
Epoch 24 | Train Loss: 0.1585 | Val Loss: 0.2670
Epoch 25 | Train Loss: 0.1592 | Val Loss: 0.2717
Epoch 26 | Train Loss: 0.1546 | Val Loss: 0.2471
Epoch 27 | Train Loss: 0.1420 | Val Loss: 0.2546
Epoch 28 | Train Loss: 0.1355 | Val Loss: 0.2546
Epoch 29 | Train Loss: 0.1154 | Val Loss: 0.2475
Epoch 30 | Train Loss: 0.1150 | Val Loss: 0.2560
Epoch 31 | Train Loss: 0.1207 | Val Loss: 0.3006
Epoch 32 | Train Loss: 0.1086 | Val Loss: 0.2368
Epoch 33 | Train Loss: 0.0974 | Val Loss: 0.2538
Epoch 34 | Train Loss: 0.0962 | Val Loss: 0.2872
Epoch 35 | Train Loss: 0.1006 | Val Loss: 0.2417
Epoch 36 | Train Loss: 0.0800 | Val Loss: 0.2418
Epoch 37 | Train Loss: 0.0830 | Val Loss: 0.2949
Epoch 38 | Train Loss: 0.0723 | Val Loss: 0.2596
Epoch 39 | Train Loss: 0.0753 | Val Loss: 0.2741
Epoch 40 | Train Loss: 0.0681 | Val Loss: 0.2540
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/dulcet-sweep-2/checkpoint_epoch_040.pt
Epoch 41 | Train Loss: 0.0667 | Val Loss: 0.2546
Epoch 42 | Train Loss: 0.0574 | Val Loss: 0.2695
Epoch 43 | Train Loss: 0.0618 | Val Loss: 0.2693
Epoch 44 | Train Loss: 0.0565 | Val Loss: 0.2907
Epoch 45 | Train Loss: 0.0524 | Val Loss: 0.3624
Epoch 46 | Train Loss: 0.0475 | Val Loss: 0.2823
Epoch 47 | Train Loss: 0.0479 | Val Loss: 0.2649
Epoch 48 | Train Loss: 0.0534 | Val Loss: 0.2886
Epoch 49 | Train Loss: 0.0363 | Val Loss: 0.3215
Epoch 50 | Train Loss: 0.0473 | Val Loss: 0.2883
Epoch 51 | Train Loss: 0.0390 | Val Loss: 0.2955
Epoch 52 | Train Loss: 0.0369 | Val Loss: 0.3259
Epoch 53 | Train Loss: 0.0383 | Val Loss: 0.2953
Epoch 54 | Train Loss: 0.0300 | Val Loss: 0.3024
Epoch 55 | Train Loss: 0.0318 | Val Loss: 0.3288
Epoch 56 | Train Loss: 0.0284 | Val Loss: 0.3377
Epoch 57 | Train Loss: 0.0368 | Val Loss: 0.3775
Epoch 58 | Train Loss: 0.0345 | Val Loss: 0.3051
Epoch 59 | Train Loss: 0.0215 | Val Loss: 0.3323
Epoch 60 | Train Loss: 0.0233 | Val Loss: 0.3215
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/dulcet-sweep-2/checkpoint_epoch_060.pt
Epoch 61 | Train Loss: 0.0221 | Val Loss: 0.3610
Epoch 62 | Train Loss: 0.0255 | Val Loss: 0.3269
Epoch 63 | Train Loss: 0.0262 | Val Loss: 0.3206
Epoch 64 | Train Loss: 0.0254 | Val Loss: 0.3224
Epoch 65 | Train Loss: 0.0181 | Val Loss: 0.4074
Epoch 66 | Train Loss: 0.0262 | Val Loss: 0.3622
Epoch 67 | Train Loss: 0.0177 | Val Loss: 0.4543
Epoch 68 | Train Loss: 0.0229 | Val Loss: 0.3412
Epoch 69 | Train Loss: 0.0154 | Val Loss: 0.3856
Epoch 70 | Train Loss: 0.0152 | Val Loss: 0.4297
Epoch 71 | Train Loss: 0.0156 | Val Loss: 0.4146
Epoch 72 | Train Loss: 0.0148 | Val Loss: 0.3687
Epoch 73 | Train Loss: 0.0245 | Val Loss: 0.4121
Epoch 74 | Train Loss: 0.0144 | Val Loss: 0.3977
Epoch 75 | Train Loss: 0.0177 | Val Loss: 0.3934
Epoch 76 | Train Loss: 0.0155 | Val Loss: 0.4310
Epoch 77 | Train Loss: 0.0358 | Val Loss: 0.3421
Epoch 78 | Train Loss: 0.0112 | Val Loss: 0.3887
Epoch 79 | Train Loss: 0.0098 | Val Loss: 0.4182
Epoch 80 | Train Loss: 0.0079 | Val Loss: 0.3823
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/dulcet-sweep-2/checkpoint_epoch_080.pt
Epoch 81 | Train Loss: 0.0070 | Val Loss: 0.4588
Epoch 82 | Train Loss: 0.0200 | Val Loss: 0.4060
Epoch 83 | Train Loss: 0.0129 | Val Loss: 0.4244
Epoch 84 | Train Loss: 0.0114 | Val Loss: 0.4174
Epoch 85 | Train Loss: 0.0054 | Val Loss: 0.3965
Epoch 86 | Train Loss: 0.0128 | Val Loss: 0.4447
Epoch 87 | Train Loss: 0.0173 | Val Loss: 0.3786
Epoch 88 | Train Loss: 0.0063 | Val Loss: 0.4415
Epoch 89 | Train Loss: 0.0082 | Val Loss: 0.3994
Epoch 90 | Train Loss: 0.0038 | Val Loss: 0.4073
Epoch 91 | Train Loss: 0.0041 | Val Loss: 0.4369
Epoch 92 | Train Loss: 0.0070 | Val Loss: 0.4542
Epoch 93 | Train Loss: 0.0224 | Val Loss: 0.4839
Epoch 94 | Train Loss: 0.0185 | Val Loss: 0.4175
Epoch 95 | Train Loss: 0.0081 | Val Loss: 0.4218
Epoch 96 | Train Loss: 0.0152 | Val Loss: 0.4433
Epoch 97 | Train Loss: 0.0118 | Val Loss: 0.4505
Epoch 98 | Train Loss: 0.0176 | Val Loss: 0.4594
Epoch 99 | Train Loss: 0.0066 | Val Loss: 0.4493
Epoch 100 | Train Loss: 0.0072 | Val Loss: 0.4272
üíæ Checkpoint saved: Checkpoints/Classifier-2.1/dulcet-sweep-2/checkpoint_epoch_100.pt
‚úÖ Final model saved: Checkpoints/Classifier-2.1/dulcet-sweep-2/final_model.pt

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:162: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  950
‚ùå Incorrect predictions:  61
 Total tested images: 1011
 Accuracy: 93.97%
