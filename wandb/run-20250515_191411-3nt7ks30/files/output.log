Epoch 1 | Train Loss: 0.7778 | Val Loss: 0.6108
Epoch 2 | Train Loss: 0.5508 | Val Loss: 0.5075
Epoch 3 | Train Loss: 0.4758 | Val Loss: 0.4701
Epoch 4 | Train Loss: 0.4069 | Val Loss: 0.4000
Epoch 5 | Train Loss: 0.3720 | Val Loss: 0.4125
Epoch 6 | Train Loss: 0.3211 | Val Loss: 0.3228
Epoch 7 | Train Loss: 0.3088 | Val Loss: 0.3062
Epoch 8 | Train Loss: 0.2667 | Val Loss: 0.3095
Epoch 9 | Train Loss: 0.2426 | Val Loss: 0.2802
Epoch 10 | Train Loss: 0.2464 | Val Loss: 0.2829
Epoch 11 | Train Loss: 0.2066 | Val Loss: 0.2837
Epoch 12 | Train Loss: 0.1924 | Val Loss: 0.2838
Epoch 13 | Train Loss: 0.1707 | Val Loss: 0.2706
Epoch 14 | Train Loss: 0.1462 | Val Loss: 0.2679
Epoch 15 | Train Loss: 0.1503 | Val Loss: 0.2962
Epoch 16 | Train Loss: 0.1290 | Val Loss: 0.2638
Epoch 17 | Train Loss: 0.1307 | Val Loss: 0.3283
Epoch 18 | Train Loss: 0.1168 | Val Loss: 0.2768
Epoch 19 | Train Loss: 0.1012 | Val Loss: 0.2809
Epoch 20 | Train Loss: 0.0875 | Val Loss: 0.3183
Epoch 21 | Train Loss: 0.0843 | Val Loss: 0.2961
Epoch 22 | Train Loss: 0.0676 | Val Loss: 0.2923
Epoch 23 | Train Loss: 0.0713 | Val Loss: 0.2758
Epoch 24 | Train Loss: 0.0573 | Val Loss: 0.3056
Epoch 25 | Train Loss: 0.0558 | Val Loss: 0.3124
Epoch 26 | Train Loss: 0.0602 | Val Loss: 0.3103
Epoch 27 | Train Loss: 0.0587 | Val Loss: 0.3251
Epoch 28 | Train Loss: 0.0495 | Val Loss: 0.3108
Epoch 29 | Train Loss: 0.0428 | Val Loss: 0.2928
Epoch 30 | Train Loss: 0.0426 | Val Loss: 0.3449
Epoch 31 | Train Loss: 0.0492 | Val Loss: 0.3224
Epoch 32 | Train Loss: 0.0372 | Val Loss: 0.3236
Epoch 33 | Train Loss: 0.0417 | Val Loss: 0.3681
Epoch 34 | Train Loss: 0.0275 | Val Loss: 0.3540
Epoch 35 | Train Loss: 0.0372 | Val Loss: 0.3343
Epoch 36 | Train Loss: 0.0333 | Val Loss: 0.3242
Epoch 37 | Train Loss: 0.0308 | Val Loss: 0.3651
Epoch 38 | Train Loss: 0.0274 | Val Loss: 0.3225
Epoch 39 | Train Loss: 0.0313 | Val Loss: 0.3288
Epoch 40 | Train Loss: 0.0409 | Val Loss: 0.3705
Epoch 41 | Train Loss: 0.0373 | Val Loss: 0.3268
Epoch 42 | Train Loss: 0.0204 | Val Loss: 0.3568
Epoch 43 | Train Loss: 0.0185 | Val Loss: 0.3348
Epoch 44 | Train Loss: 0.0295 | Val Loss: 0.3146
Epoch 45 | Train Loss: 0.0137 | Val Loss: 0.3734
Epoch 46 | Train Loss: 0.0235 | Val Loss: 0.3175
Epoch 47 | Train Loss: 0.0196 | Val Loss: 0.3623
Epoch 48 | Train Loss: 0.0200 | Val Loss: 0.3930
Epoch 49 | Train Loss: 0.0209 | Val Loss: 0.3488
Epoch 50 | Train Loss: 0.0179 | Val Loss: 0.3927

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  952
‚ùå Incorrect predictions:  59
 Total tested images: 1011
 Accuracy: 94.16419386745795%
