Epoch 1 | Train Loss: 0.9170 | Val Loss: 0.6967
Epoch 2 | Train Loss: 0.6305 | Val Loss: 0.5343
Epoch 3 | Train Loss: 0.5523 | Val Loss: 0.5094
Epoch 4 | Train Loss: 0.5221 | Val Loss: 0.4902
Epoch 5 | Train Loss: 0.5036 | Val Loss: 0.4789
Epoch 6 | Train Loss: 0.4790 | Val Loss: 0.4997
Epoch 7 | Train Loss: 0.4663 | Val Loss: 0.4444
Epoch 8 | Train Loss: 0.4424 | Val Loss: 0.4472
Epoch 9 | Train Loss: 0.4296 | Val Loss: 0.4275
Epoch 10 | Train Loss: 0.4130 | Val Loss: 0.4199
Epoch 11 | Train Loss: 0.4099 | Val Loss: 0.3908
Epoch 12 | Train Loss: 0.3713 | Val Loss: 0.3842
Epoch 13 | Train Loss: 0.3612 | Val Loss: 0.4125
Epoch 14 | Train Loss: 0.3571 | Val Loss: 0.4001
Epoch 15 | Train Loss: 0.3473 | Val Loss: 0.3793
Epoch 16 | Train Loss: 0.3340 | Val Loss: 0.3604
Epoch 17 | Train Loss: 0.3189 | Val Loss: 0.3543
Epoch 18 | Train Loss: 0.3074 | Val Loss: 0.3380
Epoch 19 | Train Loss: 0.3018 | Val Loss: 0.3512
Epoch 20 | Train Loss: 0.2899 | Val Loss: 0.3644
Epoch 21 | Train Loss: 0.2896 | Val Loss: 0.3305
Epoch 22 | Train Loss: 0.2732 | Val Loss: 0.3690
Epoch 23 | Train Loss: 0.2677 | Val Loss: 0.3155
Epoch 24 | Train Loss: 0.2513 | Val Loss: 0.3193
Epoch 25 | Train Loss: 0.2372 | Val Loss: 0.3322
Epoch 26 | Train Loss: 0.2470 | Val Loss: 0.3227
Epoch 27 | Train Loss: 0.2353 | Val Loss: 0.2960
Epoch 28 | Train Loss: 0.2139 | Val Loss: 0.3034
Epoch 29 | Train Loss: 0.2227 | Val Loss: 0.3045
Epoch 30 | Train Loss: 0.2185 | Val Loss: 0.3446
Epoch 31 | Train Loss: 0.2033 | Val Loss: 0.3235
Epoch 32 | Train Loss: 0.1942 | Val Loss: 0.2863
Epoch 33 | Train Loss: 0.1881 | Val Loss: 0.2781
Epoch 34 | Train Loss: 0.1879 | Val Loss: 0.3229
Epoch 35 | Train Loss: 0.1814 | Val Loss: 0.2725
Epoch 36 | Train Loss: 0.1775 | Val Loss: 0.3044
Epoch 37 | Train Loss: 0.1891 | Val Loss: 0.2622
Epoch 38 | Train Loss: 0.1712 | Val Loss: 0.2740
Epoch 39 | Train Loss: 0.1548 | Val Loss: 0.2723
Epoch 40 | Train Loss: 0.1499 | Val Loss: 0.3375
Epoch 41 | Train Loss: 0.1370 | Val Loss: 0.2719
Epoch 42 | Train Loss: 0.1264 | Val Loss: 0.2496
Epoch 43 | Train Loss: 0.1313 | Val Loss: 0.2554
Epoch 44 | Train Loss: 0.1274 | Val Loss: 0.2516
Epoch 45 | Train Loss: 0.1215 | Val Loss: 0.2754
Epoch 46 | Train Loss: 0.1125 | Val Loss: 0.2664
Epoch 47 | Train Loss: 0.1160 | Val Loss: 0.3968
Epoch 48 | Train Loss: 0.1205 | Val Loss: 0.2471
Epoch 49 | Train Loss: 0.1045 | Val Loss: 0.2570
Epoch 50 | Train Loss: 0.0953 | Val Loss: 0.2568

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  930
‚ùå Incorrect predictions:  81
 Total tested images: 1011
 Accuracy: 91.98813056379822%
