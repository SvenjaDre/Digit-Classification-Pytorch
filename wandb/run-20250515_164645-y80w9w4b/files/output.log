Epoch 1 | Train Loss: 3.2268 | Val Loss: 0.8239
Epoch 2 | Train Loss: 0.6658 | Val Loss: 0.6121
Epoch 3 | Train Loss: 0.5678 | Val Loss: 0.5050
Epoch 4 | Train Loss: 0.4988 | Val Loss: 0.4407
Epoch 5 | Train Loss: 0.4566 | Val Loss: 0.4265
Epoch 6 | Train Loss: 0.4240 | Val Loss: 0.4208
Epoch 7 | Train Loss: 0.3912 | Val Loss: 0.3866
Epoch 8 | Train Loss: 0.3696 | Val Loss: 0.6656
Epoch 9 | Train Loss: 0.3577 | Val Loss: 0.3848
Epoch 10 | Train Loss: 0.3529 | Val Loss: 0.3413
Epoch 11 | Train Loss: 0.3204 | Val Loss: 0.3662
Epoch 12 | Train Loss: 0.2947 | Val Loss: 0.3577
Epoch 13 | Train Loss: 0.3046 | Val Loss: 0.3207
Epoch 14 | Train Loss: 0.2861 | Val Loss: 0.3591
Epoch 15 | Train Loss: 0.2860 | Val Loss: 0.3219
Epoch 16 | Train Loss: 0.2598 | Val Loss: 0.4257
Epoch 17 | Train Loss: 0.2618 | Val Loss: 0.3095
Epoch 18 | Train Loss: 0.2398 | Val Loss: 0.3784
Epoch 19 | Train Loss: 0.2383 | Val Loss: 0.2970
Epoch 20 | Train Loss: 0.2207 | Val Loss: 0.3207
Epoch 21 | Train Loss: 0.2226 | Val Loss: 0.2973
Epoch 22 | Train Loss: 0.2163 | Val Loss: 0.3890
Epoch 23 | Train Loss: 0.1943 | Val Loss: 0.3193
Epoch 24 | Train Loss: 0.2160 | Val Loss: 0.3541
Epoch 25 | Train Loss: 0.1590 | Val Loss: 0.3237
Epoch 26 | Train Loss: 0.2044 | Val Loss: 0.3376
Epoch 27 | Train Loss: 0.1818 | Val Loss: 0.4206
Epoch 28 | Train Loss: 0.2032 | Val Loss: 0.3115
Epoch 29 | Train Loss: 0.1690 | Val Loss: 0.3287
Epoch 30 | Train Loss: 0.1886 | Val Loss: 0.3131
Epoch 31 | Train Loss: 0.1984 | Val Loss: 0.2966
Epoch 32 | Train Loss: 0.1566 | Val Loss: 0.3607
Epoch 33 | Train Loss: 0.1849 | Val Loss: 0.3536
Epoch 34 | Train Loss: 0.1582 | Val Loss: 0.3325
Epoch 35 | Train Loss: 0.1450 | Val Loss: 0.4071
Epoch 36 | Train Loss: 0.1633 | Val Loss: 0.3940
Epoch 37 | Train Loss: 0.1827 | Val Loss: 0.3122
Epoch 38 | Train Loss: 0.1560 | Val Loss: 0.3252
Epoch 39 | Train Loss: 0.1627 | Val Loss: 0.3411
Epoch 40 | Train Loss: 0.1474 | Val Loss: 0.3560
Epoch 41 | Train Loss: 0.1589 | Val Loss: 0.4258
Epoch 42 | Train Loss: 0.1445 | Val Loss: 0.3791
Epoch 43 | Train Loss: 0.1405 | Val Loss: 0.3399
Epoch 44 | Train Loss: 0.1312 | Val Loss: 0.3565
Epoch 45 | Train Loss: 0.1520 | Val Loss: 0.3570
Epoch 46 | Train Loss: 0.1278 | Val Loss: 0.3560
Epoch 47 | Train Loss: 0.1211 | Val Loss: 0.3374
Epoch 48 | Train Loss: 0.1105 | Val Loss: 0.3000
Epoch 49 | Train Loss: 0.1037 | Val Loss: 0.3847
Epoch 50 | Train Loss: 0.1513 | Val Loss: 0.3570

üîç Testing on separate test set...
/nfs/homes/sdreyer/Digit-Classification-Pytorch/ClassSweep.py:144: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  classifier.load_state_dict(torch.load(model_path, map_location=device))
‚úÖ Correct predictions:  920
‚ùå Incorrect predictions:  91
 Total tested images: 1011
 Accuracy: 90.99901088031652%
